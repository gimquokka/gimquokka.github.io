var store = [{
        "title": "[React-Native] Useful reset and renewal commands for project",
        "excerpt":"   Intro   We sometimes experience our code edit isn‚Äôt reflected to output screen of project, the error does not disappear even though the cause has been fixed, or unknown error occur that seems to be not my fault (but the most of case it is your wrong‚Ä¶ü•¥) in React-Native.   Most of these problems may derived from remaining data and state of npm metro sever, build file in Xcode, android studio and so on. In this cases, the problem can be solved simply by some reset and renewal commands. Therefore, in this post, I‚Äôll try to clean up the commands that I naturally learned while solving errors. It‚Äôs simple, but I hope it helps someoneüôèüèª   Commands   npm   npm start --reset-cache  //start metro server with reset cache   The above commands reset cache of metro sever as the name suggests. It could be a solution of problem no reflecting of installing library, json file changes or modified codes. Because, in most of cases, these problem could be invoked from metro server‚Äôs cached data.   It‚Äôs easy to understand if you think of this as a refresh button when web surfing. I have been using it very useful!üëç   Android   ./gradlew clean  //Should run command in 'android' folder(./android). It will purge android build folder. Click 'Sync Project with Gradle Files' in Android Studio         //Synchronize project with Gradle build file.   Try using ‚Äò./gradlew clean‚Äô. when you think there is no wrong in your project, but android project build fail successively. Cause might be a pre-exist build file.   It is also recommended to execute both commands when you clone React Native project of others. Since, in many cases, build files and local property like SDK location can be remain in state of and existing user‚Äôs one. By run ‚ÄòSync Project with Gradle Files‚Äô your project configuration is synchronized with local state and ‚Äò./gradlew clean‚Äô. clean pre-exist build files.   ‚ÄúSync Project with Gradle Files‚Äù location on Android Studio   iOS   Xcode   In Xcode press 'Cmd + Shift + K' in mac or Click 'Clean Build Folder' in Product tab on status bar. rm -rf ~/Library/Developer/Xcode/DerivedData  //Run command on every path in terminal. It remove derived data like modules cache and etc...   As explained in android section, if project build is kinked or you have problems with compilations, you can think of it as clean the folders created by an existing build and Derived data , that like generated by system include module cache for pre-compiling and so on‚Ä¶   Pod   pod install  //Install and renewal pod files in ios folder. It should run on ios folder(./ios)   The pod connects React Native‚Äôs node libraries with iOS. If you manage libraries in npm or yarn in RN, you can think of them in pod on iOS.   If you download and write a lot of libraries for your project, the library github README tells you to do a pod install. Even though you have done npm install and yarn add, sometimes you miss the pod install command in iOS folder. In this case, the library can‚Äôt be found when building iOS, or the ~ .h file often causes problems when building with Xcode.   Before running the simulator with react-native run-ios, make sure the pod install result is all green color that means successfully pod installed.   Conclusion   A month has passed since I learned RN. There was time to acquire knowledge during this period, but it seems that I spent almost two to three weeks catching errors. Although Docs is kind, it‚Äôs not so detailed at the book level, and there are no Korean-language resources, and if you go to StackOverflow, github issue and look at the solutions people have written, they have 10 solutions.   At first, whenever I catch an error while googled, I get a lot of stress because of the idea of ‚ÄùI have a lot to learn, but I have to catch the error ‚Ä¶‚Äù. I did it. Now, whether you‚Äôve improved a bit or you‚Äôve improved your ability to handle code, you‚Äôve significantly reduced the frequency of encountering errors. This is the moment when we feel the importance of steady.   I still have a long way to go, and I don‚Äôt know much, but I hope this is something I‚Äôve been looking for! üôèüèª. If you have any questions, please leave a question. Thank you.  ","categories": ["React-Native"],
        "tags": [],
        "url": "/react-native/RN_Useful_reset_and_renewal-commands-for-project/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[React-Native] Thread 1: signal SIGABRT Err in Xcode after update iOS ver to 13.3.1",
        "excerpt":"Description   After update iPhone(real device) iOS version to 13.3.1, ‚ÄúThread 1: signal SIGABRT~*‚Äù* error occurred in Xcode that run real iOS device(iPhone) for debugging react native project. It also seems to occur in Flutter project that also use Thread system. Let‚Äôs figure out the solutionüëä   Theard 1 ~ Error Xcode screen   Solution   There are three solution to solve this problem.           Use a non-personal Team provisioning profile            Run on the 13.3.1 version on simulator not a real device            Downgrade real iOS device‚Äôs version under 13.3.1       1. Use a non-personal Team provisioning profile   In my case, Solve the problem this way. *when I changed provisioning profile in general tab personal to corporate*. Problem was solved. this problem is just system error. So, we have to wait or fix React Native Library to compensate for error. Modify our RN code does not make chagne.   2. Run on the 13.3.1 version on simulator not a real device   It‚Äôs confirmed that react native app a*lready distributed from Apple App Store don‚Äôt make a crush* on real device iOS version 13.3.1. Therefore, if your purpose is to run RN project just for debugging app working, Test it on Simulator. Because Customer will not face such problems in real case.   3. Downgrade real iOS device‚Äôs version under 13.3.1   If you have to run RN project in real device, but you don‚Äôt have corporate provisioning profile. Downgrade you iPhone iOS version lower than 13.3.1.   How to Downgrade iOS version? It‚Äôs pretty simple! üòú   First, go to this site and Download proper iOS Firmware fit for your iPhone.   Second, click ‚Äúupdate button‚Äù with option on mac or shift on window. Then you can choice iOS firmware file that download from site above.   All you have to do to downgrade is done. It is not easy? Isn‚Äôt it?   iPhone update button location in mac   Conclusion   The solution is simple, but a lot of talk. It‚Äôs not enough, but I hope it will help someoneüôèüèª   Thank you!   References: https://github.com/flutter/flutter/issues/49504  ","categories": ["React-Native"],
        "tags": [],
        "url": "/react-native/RN_signal-SIGABRT-Err-in-Xcode-after-update-iOS-ver/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] 3D-CNN, two-stream action recognition paper review",
        "excerpt":"Paper      (1) Learning Spatiotemporal Features with 3D Convolutional Networks   (2) Two-stream convolutional networks for action recognition in videos   Overview      Still there are so many problem in video understanding as opposed to image recognition   If model process all frame in video, It‚Äôs getting too much computation. Every model sampling frame  for computation efficiency.               As a result, It is problem that the models could not recognize action that occur between sampled frame to sampled frame           In second paper, it does not define how to vectorize frame as optical flow. And there are many way to do it. It is also one of main research topic.   Actually, 3D-CNN swipe not only for height(H) and vertical(V), that is frame, but also length(L) that is temporal data in video.            But What confusing things is that every frame also has RGB value(Character). So virtually 3D-CNN work in 4-dimension(H x W x  x L). In figure 1 - (c), dimension C is omitted. Be careful of it!       Filter does not swipe in the direction of C. Bcz C of filter match with C of frame           In modern video understanding model, It is mainstream trend that how to harmonize optical flow and 3D-CNN.            As we have seen in transformer, BERT, Attention before, Don‚Äôt need RNN model for memorize temporal feature in video understanding. Bcz we can memorize temporal data only with CNN. RNN make computation slow due to impossibleness of parallel process           Key contribution of each paper is            (1) 3D-CNN model       (2) Optical flow, It use 2D-CNN           Question      What kinds of field use Video descriptor?            =&gt; Every field use video. Deep learning could be replacement of orignal one           Two paper key difference is 3D CNN, Optic flow?            =&gt; YES.           Modern model use them together? or is there different model that can train end2end model?            =&gt; Belong to the former           Stack 2d conv, 3d conv net how It is significantly different? how?            C-dimension filter size is different. In 3D-conv, It should match with frame of it. But the opposition is not           how they work actually? Could u practically explain it?            It is same as 2D-CNN model do.           In case of 3d can, there is no loss of labeling data as oppose to later paper?            No, Every model do sampling similarly           LSTM? Is better for capturing temporal data? Isn‚Äôt it?            NO. As stated above RNN actually doesn‚Äôt good choice bcz of unable to parallelize          ","categories": ["ML"],
        "tags": ["CV"],
        "url": "/ml/Paper-review-3D-CNN,-two-stream-action-recognition/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Java] 4Í∞ÄÏßÄ Ï†ëÍ∑ºÏ†úÏñ¥Ïûê(Access Modifier)Ïùò Ï∞®Ïù¥",
        "excerpt":"   Table 1. JavaÏùò Ï†ëÍ∑ºÏ†úÏñ¥Ïûê Í∞ÑÏùò Ìè¨Ìï®Í¥ÄÍ≥ÑÎ•º ÎÇòÌÉÄÎÇ∏ ÎèÑÏãù (credit: https://opentutorials.org/course/1223/6061)   ÏûêÎ∞îÏùò 4Í∞ÄÏßÄ Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÏùò Í¥ÄÍ≥ÑÎäî ÏúÑÏùò ÎèÑÏãùÍ≥º Í∞ôÎã§. Í∞úÏù∏Ï†ÅÏúºÎ°ú ÏûêÎ∞î ÏΩîÎìúÎ•º ÏßúÎ©¥ÏÑú ÎäêÎÇÄ Ïì∞ÏûÑÏÉàÎäî Îã§ÏùåÍ≥º Í∞ôÎã§.   Í∏∞Î≥∏Ï†ÅÏúºÎ°ú ÏûêÎ∞îÏùò Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÎäî Ï£ºÎ°ú encapculationÏùÑ ÏúÑÌïòÏó¨ ÏÇ¨Ïö©ÎêúÎã§. encapsulationÏùò Î™©Ï†ÅÏùÄ Î≥¥ÏïàÏù¥ Îê† ÏàòÎèÑÏûàÍ≥† ÌîÑÎ°úÍ∑∏Îû®Ïùò Íµ¨Ï°∞ ÌòπÏùÄ ÏÑ§Í≥ÑÏùò Î¨∏Ï†úÏùº ÏàòÎèÑ ÏûàÎã§. Í∞úÏù∏Ï†ÅÏúºÎ°ú ÏÇ¨Ïö©Ìï¥Î≥∏ Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÎì§Ïùò Ïì∏Î™®Îäî ÏïÑÎûòÏôÄ Í∞ôÎã§.           private                       ClassÏïàÏùò data fieldÎ•º ÏùÄÎãâÌôî ÌïòÍ∏∞ ÏúÑÌïòÏó¨ ÏÇ¨Ïö©ÌïúÎã§.                        ÏùÄÎãâÌôîÏóê ÎåÄÌïòÏó¨ ÎÖºÌïòÍ∏∞ Ï†Ñ Í∞ÑÎã®Ìûà ÏûêÎ∞îÏùò Î≥ÄÏàò Ï≤¥Í≥ÑÏóê ÎåÄÌïòÏó¨ Ï†ïÎ¶¨ÌïòÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.           1) ÏûêÎ∞îÎäî Í∏∞Î≥∏Ï†ÅÏúºÎ°ú ClassÎ°ú Ïù¥Î£®Ïñ¥Ï†∏ÏûàÍ≥†,           2) Ïù¥ Class ÏïàÏóêÏÑúÎèÑ method Î∞ñÏóê ÏûàÎäî Î≥ÄÏàòÎ•º Member VariablesÎùº ÌïòÍ≥†,           3) methodÏïàÏùò Î≥ÄÏàòÎ•º Local VariableÎùºÍ≥† ÌïúÎã§.           4) Member VariablesÎäî Îã§Ïãú ÏïÑÎûòÏùò Í∑∏Î¶ºÍ≥º Í∞ôÏù¥           ‚Äã    (1) Instance ÏÉùÏÑ±Ïó¨Î∂ÄÏôÄ Í¥ÄÍ≥ÑÏóÜÏù¥ Class ÏûêÏ≤¥Ïóê ÎÇ¥Ïû•ÎêòÏñ¥ ÏûàÎäî Class VarialbesÏôÄ           ‚Äã    (2) newÎ•º ÌÜµÌïòÏó¨ instanceÎ•º ÏÉùÏÑ±ÌïòÎ©¥ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÎäî Instance VariablesÎ°ú ÎÇòÎàå Ïàò ÏûàÎã§.                        Í∑∏Î†áÎã§Î©¥ Ïôú EncapsulationÏùÑ Ïôú ÌïòÎäîÍ±∏Íπå? ClassÏùò Data fieldÎ•º ÏùÄÎãâÌïòÍ≤å ÎêòÎ©¥                      Object Í∞ÑÏùò Í≤∞Ìï©ÎèÑÍ∞Ä ÎÇÆÏïÑÏ†∏ Ïû¨ÏÇ¨Ïö©Ïù¥ Ïö©Ïù¥Ìï¥ÏßÑÎã§.           ObjectÏùò ÎÇ¥Î∂ÄÏùò Ï†ïÎ≥¥Í∞Ä ÏÜêÏã§ÎêòÎäî Í≤ÉÏùÑ Î∞©ÏßÄÌï† Ïàò ÏûàÎã§.                            get, set method Îì±ÏùÑ ÌÜµÌï¥ÏÑúÎßå Ï†ëÍ∑ºÌïòÏó¨ÏïºÌï®ÏúºÎ°ú ÏâΩÍ≤å Ï†ëÍ∑ºÏùÑ Ï†úÌïúÌï† Ïàò ÏûàÎî∞.                                   ObjectÏùò Data fieldÎ•º Ïô∏Î∂ÄÏóê ÎÖ∏Ï∂úÏãúÌÇ§ÏßÄÎèÑÎ°ùÌïòÏó¨ Î≥¥ÏïàÏùÑ Ïú†ÏßÄÌï† Ïàò ÏûàÎã§.                            ÌÅ∞ ÏÑúÎπÑÏä§ÏóêÏÑú Ï†ïÎ≥¥ Ïú†Ï∂úÏùÄ Ï†ïÎßê ÏπòÎ™ÖÏ†ÅÏùº Ïàò ÏûàÎã§.                                   Class Î≥ÄÌòïÏùÑ ÌÜµÏ†úÌïòÏó¨ ProjectÏùò Î≥µÏû°ÏÑ±ÏùÑ ÎÇÆÏ∂ú Ïàò ÏûàÎã§.                   Îì±Ïùò Ïû•Ï†êÏù¥ ÏûàÏùÑ Ïàò ÏûàÎã§. (Î¨ºÎ°† ÏΩîÎìúÎäî Í∏∏Ïñ¥Ï†∏ ÏãúÍ∞ÑÏù¥ Îçî Ïò§Îûò Í±∏Î¶¥ Ïàò ÏûàÏßÄÎßå ÎîîÎ≤ÑÍπÖ ÎïåÎ¨∏Ïóê ÏãúÍ∞ÑÏù¥ Í∏∏Ïñ¥ÏßÄÎäî Í≤ÉÏóê ÎπÑÌïòÎ©¥ ÏïÑÎ¨¥Í≤ÉÎèÑ ÏïÑÎãàÎã§‚Ä¶ )                        Îã§Ïãú Ï£ºÏ†úÎ°ú ÎèåÏïÑÍ∞ÄÎ©¥ private Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÎ•º Member VariablesÏóê ÏÇ¨Ïö©ÌïòÎ©¥ Class ÎÇ¥Î∂ÄÏóêÏÑúÎßå ÏÇ¨Ïö©Ïù¥ Í∞ÄÎä•ÌïòÍ≥† Ïô∏Î∂ÄÏóêÏÑú ÏÇ¨Ïö©Ïãú Î∞òÎìúÏãú get, set method Îì±ÏùÑ ÌÜµÌïòÏó¨ Member VariablesÎ•º Î≥ÄÍ≤ΩÌï¥ÏïºÌï®ÏúºÎ°ú ÏúÑÏôÄ Í∞ôÏùÄ ÏùÄÎãâÌôîÏù¥ ÌòúÌÉùÏùÑ ÎàÑÎ¶¥ Ïàò ÏûàÎã§.                              (credit: https://www.differencebetween.com/difference-between-class-and-vs-instance-variables/)      default            Java CodeÎ•º Î≥¥Î©¥ defaultÎùºÎäî Ïù¥Î¶ÑÏùò Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÎ•º Î≥∏ Ï†ÅÏù¥ ÏûàÎäîÍ∞Ä? ÌïÑÏûêÎäî Í∞úÏù∏Ï†ÅÏúºÎ°ú ÏïÑÏßÅÍπåÏßÄÎäî ÏóÜÎã§. ÎßéÏùÄ Î∂ÑÎì§ ÎòêÌïú ÏóÜÏùÑ Ïàò ÏûàÎã§Í≥† ÏÉùÍ∞ÅÌïúÎã§. ÏôúÎÉêÌïòÎ©¥ classÎÇò method ÏïûÏóê ÏïÑÎ¨¥Í≤ÉÎèÑ Ï†ÅÏßÄ ÏïäÏúºÎ©¥ defaultÎùºÎäî Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÍ∞Ä compileÏãú ÏûêÎèôÏúºÎ°ú ÏÉùÏÑ±ÎêòÍ∏∞ ÎïåÎ¨∏Ïù¥Îã§.       Í∞ôÏùÄ package Ï¶â, Í∞ôÏùÄ folder ÏïàÏóê ÏûàÎã§Î©¥ ÏÑúÎ°ú Ï†ëÍ∑ºÏù¥ Í∞ÄÎä•ÌïòÎã§. ÎßåÏïΩ Í∞ôÏùÄ folderÏóêÏÑú ÏïåÍ≥†Î¶¨Ï¶ò Î¨∏Ï†úÎ•º ÌíÄ Îïå ÏïÑÎ¨¥Îü∞ Ï†ëÍ∑ºÏ†úÏñ¥ÏûêÍ∞Ä ÏóÜÎäî(=default) Class 2Í∞úÍ∞Ä Í∞ôÏùÄ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÑÎã§Î©¥, Îëê classÎäî ÏÑúÎ°ú Ìò∏Ï∂ú Î≤îÏúÑÎ•º Í≥µÏú†ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê ErrorÍ∞Ä Îú∞ Í≤ÉÏù¥Îã§.           protected            defaultÏùò Î≤îÏúÑÏóê ÎçîÎ∂àÏñ¥ extends Îì±ÏúºÎ°ú ÏÉÅÏÜçÌïú subclassÏóêÏÑúÍπåÏßÄ ÏÇ¨Ïö©Ïù¥ Í∞ÄÎä•ÌïòÎã§.           public            Îã§Î•∏ packageÏóêÏÑúÎèÑ ÏÇ¨Ïö©Ïù¥ Í∞ÄÎä•ÌïòÎã§.       Library ÏïàÏùò Ìò∏Ï∂úÏùÑ Î™©Ï†ÅÏúºÎ°ú ÌïòÎäî class, methodÎäî Îã§Î•∏ PackageÏóêÏÑú Ìò∏Ï∂úÏù¥ ÎêòÏñ¥ ÏÇ¨Ïö©Îê† Ïàò ÏûàÏñ¥ÏïºÌïòÍ∏∞ ÎïåÎ¨∏Ïóê publicÏù¥Ïó¨Ïïº ÌïúÎã§.       ‚Äúpublic static main(Sting[] args){}‚ÄùÎùºÎäî main methodÎ•º ÎßéÏù¥Îì§ ÏûëÏÑ±Ìï¥ Î≥¥ÏïòÏùÑ Í≤ÉÏù¥Îã§. Ïù¥Îäî JavaÏùò Runtime interpreterÍ∞Ä Í∞ÄÏû• Î®ºÏ†Ä main methodÎ•º Ï∞æÏïÑÏÑú Ïã§ÌñâÌïòÎäîÎç∞ Ïù¥Îïå Ïù¥ main methodÎäî Î∞òÎìúÏãú ÏàòÌñâÎêòÏñ¥Ïïº ÌïòÍ∏∞ ÎïåÎ¨∏Ïóê publicÏúºÎ°ú Ïñ¥ÎîîÏÑúÎì† Ï†ëÍ∑ºÍ∞ÄÎä•ÌïòÍ≤å Ïó¥Ïñ¥ÎÜìÏùÄ Í≤ÉÏù¥ÎùºÍ≥† ÏÉùÍ∞ÅÌïúÎã§.           ps. Í∏ÄÏù¥ Ïì∞Îã§Î≥¥Îãà Ïö©ÎëêÏÇ¨ÎØ∏Í∞Ä Îêú Í≤É Í∞ôÏùÄÎç∞, ÎÇòÏ§ëÏóê Îçî ÎßéÏù¥ Î∞∞Ïö∞Í≤å ÎêòÎ©¥ Ï∂îÍ∞ÄÌï¥ÏïºÍ≤†Îã§‚Ä¶  ","categories": ["Java"],
        "tags": ["TIL"],
        "url": "/java/Java_%EC%A0%91%EA%B7%BC%EC%A0%9C%EC%96%B4%EC%9E%90/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Java] Ïôú static variableÏùÄ static methodÏóêÏÑú Î∞ñÏóê Î™ªÏì∏Íπå?",
        "excerpt":"ÏßàÎ¨∏: Ïôú  static methodÏóêÏÑúÎäî static variableÎßå Ïì∏ Ïàò ÏûàÏùÑÍπå?   ÏïÑÎûò Í∑∏Î¶ºÏóêÏÑú Ïïå Ïàò ÏûàÎìØÏù¥      instanceÍ∞Ä ÏÉùÏÑ±ÎêòÍ∏∞ Ï†ÑÏóê static methodÏù¥ global spaceÏóê Ìï†ÎãπÎêòÍ∏∞ ÎïåÎ¨∏Ïóê   Ïù¥Ïóê ÎßûÏ∂∞ Ìï†ÎãπÎêòÎäîstatic variableÎßåÏù¥ static mehodÏóê ÏÇ¨Ïö©Ïù¥ Í∞ÄÎä•ÌïòÎã§.   instance varialbeÏùò Í≤ΩÏö∞ instance ÏÉùÏÑ±ÎêòÏñ¥ heap ÏòÅÏó≠Ïóê Ìï†ÎãπÎêú Ïù¥ÌõÑ. Ï¶â, static method ÏÉùÏÑ± Ïù¥ÌõÑÏóê ÏÉùÏÑ±ÎêòÍ∏∞ ÎïåÎ¨∏Ïóê ÏÇ¨Ïö©Ïù¥ Î∂àÍ∞ÄÎä•Ìïú Í≤ÉÏù¥Îã§.      FIG 1. JavaÏù¥ Event Timeline   ‚Äã\tÏúÑÏùò ÌÉÄÏûÑÎùºÏù∏Ïóê ÎåÄÌïú Í∞ÑÎã®Ìïú ÏÑ§Î™ÖÏùÑ ÌïòÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.           Compile timeÏóêÎäî Ïö∞Î¶¨Í∞Ä ÏûëÏÑ±Ìïú Source CodeÎ•º JVMÏù¥ Ïù¥Ìï¥Ìï† Ïàò ÏûàÎèÑÎ°ù Î∞îÍøîÏ£ºÎäî ÏûëÏóÖÏùÑ ÏàòÌñâÌï®            Run TimeÏóêÎäî ÌîÑÎ°úÍ∑∏Îû®Ïù¥ Ïã§ÌñâÎê®. Í∑∏Î¶¨Í≥† Ïù¥ÏôÄ ÎèôÏãúÏóê compileÎ°ú ÏñªÏùÄ Byte Code, Î™®Îì† class, static Í¥ÄÎ†® Í∞íÎì§ÏùÑ global spaceÏóê Ìï†ÎãπÌïúÎã§.            Object TimeÏóêÎäî instanceÍ∞Ä ÏÉùÏÑ±Ïãú heapÏóê Í∞íÏù¥ Ìï†ÎãπÏù¥ ÎêúÎã§. Í∑∏Î¶¨Í≥† classÏùò Î≥ÄÏàòÎì§Ïù∏ Member variableÏù¥ Ï¥àÍ∏∞Ìôî ÎêúÎã§.            Method TimeÏóêÎäî methodÍ∞Ä ÏàòÌñâÎêòÎ©¥ÏÑú ÌïÑÏöîÌïú Ï†ïÎ≥¥Îì§Ïù¥ Activation record (method ÏïàÏùò local variables Ï†ïÎ≥¥Îì§)Ïù¥ stack ÏòÅÏó≠Ïóê ÏåìÏù¥Í≤å ÎêúÎã§.                       Ïó¨Í∏∞ÏÑú Ïû¨ÎØ∏ÏûàÎäî Ï†êÏùÄ local variableÏùÄ member variableÍ≥º Îã¨Î¶¨ primitive data typeÏùÑ ÏÇ¨Ïö©ÏùÑ ÌïòÏó¨ÎèÑ int =&gt; 0, boolean =&gt; false, char =&gt; ‚Äò‚Äò\\u0000‚ÄôÍ≥º Í∞ôÏù¥ Ï¥àÍ∏∞ÌôîÍ∞Ä ÎêòÏßÄ ÏïäÎäîÎã§.                        Í∞úÏù∏Ï†ÅÏù∏ Ï∂îÏ∏°Ïù¥ÏßÄÎßå Ïù¥Îäî method Ìò∏Ï∂úÏãú stackÏóê activation recordÍ∞Ä ÏåìÏòÄÎã§Í∞Ä, ÏÇ¨ÎùºÏßÄÎäî ÎπàÎèÑÍ∞Ä member variable Î≥¥Îã§ ÏõîÎì±Ìûà ÎÜíÏïÑÏÑú Ïù¥Î•º ÌîÑÎ°úÍ∑∏Îû® ÏûëÏÑ±ÏûêÍ∞Ä Íº≠ ÏÇ¨Ïö©Ìï† Í∞íÎßå Î™ÖÏãúÏ†ÅÏúºÎ°ú ÏÑ†Ïñ∏ÌïòÎùºÎäî ÏùòÎèÑÎùºÍ≥† ÏÉùÍ∞ÅÌïúÎã§.                        ÏôúÎÉêÌïòÎ©¥ Ïª¥Ìì®ÌÑ∞ Íµ¨Ï°∞ÏóêÏÑú Ïïå Ïàò ÏûàÎìØÏù¥ memory Input/OutputÏóêÏÑú ÍµâÏû•Ìûà ÌÅ∞ ÏãúÍ∞ÑÏÜåÎπÑÍ∞Ä ÏùºÏñ¥ÎÇòÍ∏∞ ÎïåÎ¨∏Ïóê ÏµúÎåÄÌïú Î∂àÌïÑÏöîÌïú memory Ìï†ÎãπÏùÑ Ï§ÑÏù¥Îäî Í≤ÉÏù¥ ÏÑ±Îä•Ìñ•ÏÉÅÏùÑ ÏúÑÌï¥ Ï¢ãÏùÄ Ï†ÑÎûµÏù¥Í∏∞ ÎïåÎ¨∏Ïù¥Îã§.                  ","categories": ["Java"],
        "tags": ["TIL"],
        "url": "/java/Java_Event_Timeline/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[React-Native] Modal Íµ¨ÌòÑÌïòÍ∏∞",
        "excerpt":"[React-Native] Modal Íµ¨ÌòÑÌïòÍ∏∞   Question-mark?   Í∞úÏöî   ModalÏù¥ÎùºÎäî Îã®Ïñ¥Î•º Î™∞ÎûêÏùÑ Îïå Î∂ÄÌÑ∞ Ïù¥Î•º Ïã§Ï†ú AppÏóê Ï†ÅÏö©ÌïòÍ∏∞ ÍπåÏßÄ Í≥ºÏ†ïÏùÑ Ï†ïÎ¶¨ÌïòÎ†§Í≥† Ìï©ÎãàÎã§. Í∞ÑÎã®Ìïú Í∏ÄÏù¥ÏßÄÎßå ÎàÑÍµ∞Í∞ÄÏóêÍ≤åÎäî ÎèÑÏõÄÏù¥ ÎêòÏóàÏúºÎ©¥ Ìï©ÎãàÎã§. üôè   ModalÏù¥ÎûÄ?   ‚ÄúÎ™®Îì§ ÏúàÎèÑ(Modal Window)Îäî ÏÇ¨Ïö©Ïûê Ïù∏ÌÑ∞ÌéòÏù¥Ïä§ ÎîîÏûêÏù∏ Í∞úÎÖêÏóêÏÑú ÏûêÏãù ÏúàÎèÑÏóêÏÑú Î∂ÄÎ™® ÏúàÎèÑÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞ Ï†ÑÏóê ÏÇ¨Ïö©ÏûêÏùò ÏÉÅÌò∏ÎèôÏûëÏùÑ ÏöîÍµ¨ÌïòÎäî Ï∞ΩÏùÑ ÎßêÌïúÎã§.‚Äù‚Ää‚Äî‚ÄäÏúÑÌÇ§Î∞±Í≥º   ÎùºÍ≥† Í∏∞Ïà†ÎêòÏñ¥ ÏûàÎäîÎç∞Ïöî. ModalÏù¥ÎùºÎäî Îã®Ïñ¥Î•º Ï≤òÏùå Ï†ëÌïòÏãúÎäî Î∂ÑÎì§ÏùÄ Ïù¥Î†áÍ≤åÎßå Î≥¥Î©¥ Ï†ïÎßê Í∞ê ÏïàÏò§ÏãúÏ£†?   ÏùºÎ∞òÏ†ÅÏúºÎ°ú ÏÇ¨Ïö©ÎêòÎäî ModalÏ∞Ω ÏòàÏãú Gif   Ïö©Ïñ¥Îäî ÏÉùÏÜåÌïòÏã§ Ïàò ÏûàÏßÄÎßå Ïö∞Î¶¨Í∞Ä Ïã§Ï†úÎ°ú AppÍ≥º WebÏóêÏÑú ÏûêÏ£º Î¥ê ÏôîÎçò UIÏûÖÎãàÎã§. ModalÏùÑ Ïù¥Ïö©ÌïòÎ©¥ ÏÇ¨Ïö©ÏûêÏóêÍ≤å ÌäπÏ†ï ÌñâÎèô(ÏÑ†ÌÉù)ÏùÑ ÏöîÍµ¨Ìï† Ïàò ÏûàÏäµÎãàÎã§. Ï£ºÎäî PropsÍ∞í(ÏòµÏÖò)Ïóê Îî∞ÎùºÏÑú ÌäπÏ†ï ÌñâÎèôÏùÑ ÌïòÎèÑÎ°ù Í∞ïÏ†úÌï† ÏàòÎèÑ ÏûàÍ≥†, Ï£ºÎ≥ÄÌôîÎ©¥ÏùÑ ÌÑ∞ÏπòÌïòÏó¨ Modal Ï∞ΩÏùÑ ÏÇ¨ÎùºÏßÄÍ≤å Ìï† ÏàòÎèÑ ÏûàÏäµÎãàÎã§. Î∞±Î¨∏Ïù¥ Î∂àÏó¨ÏùºÍ≤¨! Ïö∞Î¶¨Îäî Í∞úÎ∞úÏûêÏù¥Í∏∞ ÎïåÎ¨∏Ïóê Ïã§Ï†úÎ°ú ÏΩîÎìúÎ•º Î≥¥Î©¥ÏÑú ÏñòÍ∏∞Î•º ÌïòÎäî Í≤ÉÏù¥ Îπ†Î•¥Í≤†Ï£†?ü§ì   RNÏúºÎ°ú Modal Íµ¨ÌòÑÌïòÍ∏∞   Used library   ÏΩîÏñ¥ ÎùºÏù¥Î∏åÎü¨Î¶¨Î°úÎäî ÌÅ¨Í≤å React-Native ÏïàÏùò Í∏∞Î≥∏ ModalÍ≥º react-native-communityÏùò react-native-modalÍ∞Ä ÏûàÏäµÎãàÎã§.      ‚ÄúThe goal of react-native-modal is expanding the original react-native Modal‚Äù    Ïù¥ÎùºÍ≥† react-native-modalÏùò READMEÏóê ÎÇòÏôÄ ÏûàÎìØÏù¥ react-native-communityÏùò modalÏùÄ Í∏∞Î≥∏ React-Native ModalÏùò ÌôïÏû•ÌåêÏù¥ÎùºÍ≥† Î≥º Ïàò ÏûàÏäµÎãàÎã§. Í∞ôÏùÄ Í∏∞Îä•ÏùÑ Íµ¨ÌòÑÌï† Ïàò ÏûàÍ≥†, Ï§Ñ Ïàò ÏûàÎäî Props ÎòêÌïú communityÏùò Í≤ÉÏù¥ Ìõ®Ïî¨ Îçî Îã§ÏñëÌï©ÎãàÎã§. Ï†Ä ÎòêÌïú ÌîÑÎ°úÏ†ùÌä∏ÏóêÏÑú ÏúÑÏôÄ Í∞ôÏùÄ Ïù¥Ïú†Î°ú react-native-modalÏùÑ ÏÇ¨Ïö©ÌïòÏòÄÍ≥†, Ïù¥ Í∏ÄÏóêÏÑú ÎòêÌïú react-native-modalÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§.   yarn add react-native-modal or npm i react-native-modal   Î•º RN ÌîÑÎ°úÏ†ùÌä∏ ÎÇ¥ÏóêÏÑú ÏûÖÎ†•ÌïòÏó¨ ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Îã§Ïö¥Î∞õÏïÑ Ï§çÎãàÎã§.   Example Code     ModalExample.tsx (Styled-Componet, React-Hooks ÏÇ¨Ïö©)   ÏÜåÏä§ ÏΩîÎìúÏùò ÏòàÏãúÎäî ÏúÑÏôÄ Í∞ôÏäµÎãàÎã§. Ï£ºÏÑùÏ≤òÎ¶¨Î•º Ìï¥ÏÑú ‚ÄúÏù¥Îü∞ÏãùÏúºÎ°ú Ïì∞Ïù¥Îäî Íµ¨ÎÇò‚ÄùÌïòÍ≥† Î≥¥ÏãúÍ∏∞Ïóê Í¥úÏ∞ÆÏùÑ Í≤É Í∞ôÏäµÎãàÎã§. Ï∞∏Í≥†Ìï†ÎßåÌïú Í≥≥ÏùÑ Ï¢Ä ÏßëÍ≥† ÎÑòÏñ¥Í∞ÄÏûêÎ©¥     Using SafeAreaView as Container   SafeAreaViewÎ•º ContainerÎ°ú ÌôúÏö©ÌïòÍ≤å ÎêòÎ©¥ ÏïÑÏù¥Ìè∞ Îì±ÏóêÏÑú ViewÏóê ÏÉÅÎã®Ïóê margin Í∞íÏùÑ Ï§Ñ ÌïÑÏöî ÏóÜÏù¥ ÎÖ∏Ïπò ÏïÑÎûò Î∂ÄÎ∂ÑÎ∂ÄÌÑ∞ RenderingÏãúÏºúÏ§çÎãàÎã§.     Using View as Line in Modal window   Î™®Îã¨Ïùò TouchableOpactiyÏóê borderÏùÑ Ï£ºÏñ¥ÎèÑ ÎêòÏßÄÎßå ÌÅ¥Î¶≠Ïãú Í∏ÄÏûêÎßå Ìö®Í≥ºÍ∞Ä Î®πÍ∏∏ Î∞îÎûòÏÑú LineÏùÑ ViewÏùÑ Ïù¥Ïö©ÌïòÏó¨ Îî∞Î°ú Íµ¨ÌòÑÌïòÏòÄÏäµÎãàÎã§. ÏõπÏóêÏÑúÎäî ÏÑ†ÏùÑ Í∏ãÎäî ÌÉúÍ∑∏Í∞Ä ÏûàÎäî Í≤É Í∞ôÏùÄÎç∞ RNÏóêÏÑúÎäî ÏÑ† ÌïòÎÇò ÎïåÎ¨∏Ïóê ÎùºÏù¥Î∏åÎü¨Î¶¨Î•º Î∞õÎäî Í≤ÉÎèÑ ÎÇ≠ÎπÑÏù∏ Í≤É Í∞ôÍ≥† Í∑∏ÎûòÏÑú ViewÎ•º Ïù¥Ïö©ÌïòÏó¨ Î™®Îã¨Ïùò ÏÑ†ÌÉùÏßÄ ÏÇ¨Ïù¥Ïóê ÏÑ†ÏùÑ Í∑∏Ïñ¥Ï£ºÏóàÏäµÎãàÎã§. Îçî Ï¢ãÏùÄ Î∞©Î≤ïÏùÑ ÏïÑÏãúÎäî Î∂ÑÏùÄ ÏïåÎ†§Ï£ºÏãúÍ∏∏‚Ä¶     To control Modal window use isVisible Props   modalVisibleÏù¥ÎùºÎäî state Í∞íÏùÑ ÏÑ§Ï†ïÌïòÏó¨ ModalÏùò isVisible PropsÏóê Î¨ºÎ†§Ï§çÎãàÎã§. PropsÏùò Ïù¥Î¶ÑÏóêÏÑú Ïïå Ïàò ÏûàÎìØÏù¥ state Í∞íÏù¥ trueÏù¥Î©¥ Î™®Îã¨Ï∞ΩÏù¥ ÎÇòÌÉÄÎÇòÍ≥†, falseÏù¥Î©¥ ÏÇ¨ÎùºÏßëÎãàÎã§.(PropsÏù¥Î¶Ñ Ï∞∏ ÏûòÏßÄÏóàÎÑ§Ïöî..„Öé)     Use state to control Modal   ÏÑ†ÌÉùÏßÄ ÎßàÎã§ onPress EventÎ•º Í±∏Ïñ¥Ï§ò ÏÑ†ÌÉùÏãú isVisbleÏôÄ OutPutÏùÑ Ï∂úÎ†•Îê† stateÍ∞Ä Î∞îÎÄåÎèÑÎ°ùÌï©ÎãàÎã§.   {/* Î™®Îã¨ÏóêÏÑú ÏÑ†ÌÉù Í≤∞Í≥º Í∞íÏùÑ StateÎ°ú Î∞õÏïÑÏÑú ÌôîÎ©¥Ïóê ÌëúÏãú */}       &lt;StyledModalOutputText&gt; {modalOutput} &lt;/StyledModalOutputText&gt;   Í≤∞Í≥º Í∞íÏùÄ ÏúÑÏôÄ Í∞ôÏù¥ Modal OpenÏù¥ÎùºÍ≥† Ïç®Ï†∏ÏûàÎçò Î≤ÑÌäºÎ¨∏Íµ¨Î•º ÎåÄÏ≤¥ÌïòÏó¨ ÌëúÏãúÎê©ÎãàÎã§.   Î™®Îã¨ Íµ¨ÌòÑÏùÑ ÏúÑÌïú Îã§Î•∏ ÏÑúÎìúÌååÌã∞ ÎùºÏù¥Î∏åÎü¨Î¶¨Îì§   maxs15/react-native-modalbox A react native component, easy, fully customizable, implementing the ‚Äòswipe down to close‚Äô feature. npm install‚Ä¶github.com   jacklam718/react-native-modals A react native modals library. Swipeable. Highly customizable. Support multi modals &amp; Support custom animation. For IOS‚Ä¶github.com   Modal Íµ¨ÌòÑÏùÑ ÏúÑÌïú Îã§Î•∏ ÏÑúÎìúÌååÌã∞ ÎùºÏù¥Î∏åÎü¨Î¶¨ Ï§ëÏóêÏÑú Ïú†Î™ÖÌïú Í≤ÉÏùÄ ÏúÑ ÎëêÍ∞ú Ï†ïÎèÑ ÏûàÎäî Í≤É Í∞ôÏäµÎãàÎã§. Í∞úÏù∏Ï†ÅÏù∏ ÏÉùÍ∞ÅÏúºÎ°úÎäî Ï†úÍ∞Ä ÏÇ¨Ïö©Ìïú Community ÎùºÏù¥Î∏åÎü¨Î¶¨Ïùò PropsÎì§Îßå ÏÇ¨Ïö©ÌïòÏÖîÎèÑ ÏõêÌïòÎäî ModalÏùÑ Ï∂©Î∂ÑÌûà Íµ¨ÌòÑÌïòÏã§ Ïàò ÏûàÍ≥†, Î≤àÍ±∞Î°≠ÎçîÎùºÎèÑ ÏßÅÏ†ëÍµ¨ÌòÑÌïòÎäîÍ≤å dependencyÎÇò, Ïª§Ïä§ÌÑ∞ÎßàÏù¥Ï¶à Î∂ÄÎ∂ÑÏóêÏÑú Ïö©Ïù¥ÌïòÎã§Í≥† ÏÉùÍ∞ÅÌï©ÎãàÎã§. Í∑∏Î¶¨Í≥† ÏïÑÎ¨¥ÎûòÎèÑ Community LibraryÎì§Ïù¥ Îã§Î•∏ ÏÑúÎìúÌååÌã∞ LibraryÎ≥¥Îã§ Ï°∞Í∏à Îçî Bug freeÌïòÏßÄ ÏïäÎÇò ÏÉùÍ∞ÅÌï¥Î¥ÖÎãàÎã§.   Îß∫ÏùåÎßê   Í∞ÑÎã®Ìïú ÎÇ¥Ïö©ÏùÑ Í∏∏Í≤å ÌíÄÏñ¥ÏÑú Í∏∞Ïà†Ìïú Í∞êÏù¥ ÏûàÏäµÎãàÎã§. Í∞úÏù∏Ï†ÅÏúºÎ°ú RNÍ≥µÎ∂ÄÏãúÏûë ÌïúÏßÄ ÏñºÎßà ÏïàÎêú Ï¥àÏ∞ΩÍ∏∞Ïóê ÎÇ¥Ïö©Îßå ÏùµÌûàÍ∏∞ÎèÑ Î≤ÑÍ±∞Ïö¥Îç∞, ÌïúÍµ≠Ïñ¥Î°ú Îêú ÏûêÎ£åÍ∞Ä ÏóÜÏñ¥ÏÑú ÏòÅÏñ¥Î°ú Í≥µÎ∂ÄÌïòÎäêÎùº ÌûòÎì§ÏóàÎçò Í≤ΩÌóòÏù¥ ÏûàÎäîÎç∞Ïöî. Ïù¥ÎØ∏ Í≤ΩÎ†•Ïù¥ Ï°∞Í∏àÏûàÎäî Î∂ÑÎì§ÏóêÍ≤åÎäî ÎÑàÎ¨¥ Ïâ¨Ïö¥ Í∏Ä Ïùº ÏàòÎèÑ ÏûàÏßÄÎßå, ÏãúÏûëÌïúÏßÄ ÏñºÎßà ÏïàÎêú Î∂ÑÎì§ÏóêÍ≤å, ÌòπÏùÄ ÎàÑÍµ∞Í∞ÄÏóêÍ≤åÎäî Íº≠ Ïù¥ Í∏ÄÏù¥ ÎèÑÏõÄÏù¥ ÎêòÏóàÏúºÎ©¥ Ìï©ÎãàÎã§.üôèüèª  ","categories": ["React-Native"],
        "tags": ["TIL"],
        "url": "/react-native/RN_Model/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] Flow-Net one page summary",
        "excerpt":"0. Reason for selection   I think this paper is a singular point of the optical flow field. Because It was the first end-to-end network that compares performance to the traditional method. And It has become one of the classic paper in that there are many published network adopt it, as well as high citation number. Thus I will cover this paper as a summarization topic.   1. Problem   Original FlowNet was a great breakthrough in that it tried to apply Deep Learning to optical flow, that had been performed handcraft manner method. Even if there is no comparison regard to performance between it and the traditional method like EpicFlow, FlowFields. So, the authors advance FlowNet as FlowNet 2.0 in this paper.   2. Contribution   a) Training data and it‚Äôs scheduling important      It can‚Äôt help but compare FlowNet1.0 to it‚Äôs 2.0. In FlowNet 2.0, Flying Things 3D Dataset is additionally used.   And more interesting is that the dataset present scheduling in training is one of the important things in the training model. We can see in the chart that if we first train the model Flying Chairs model and then use the Fly Things3D dataset, the models perform better compared to training with other datasets.   b) Stacked Architectrue      The first chart is that various trials that stacked structure of marked upper line in the model structure diagram. S and C mean Simple and Correlation version of FlowNet. Small s and c is a downside(3/8) version of it (because of decreasing computational cost). As we can see on the table, C+S+S = CSS combination outweigh than others. I think that It might be reflected a trend of DL model structure that goes larger as time goes by for a high performance   c) Decrease Noise from Small Displacement   The most Traditional method have hardship for large displacement. Contrastively original FlowNet had a problem for small displacement noise. For improving it, In this paper suggest FlowNet-SD, that is marked lower line of model structure, is that handle small displacement with reducing receptive field by using multiple 3x3 kernels.   3. Result      FlowNet 2.0 has a quite reasonable Average EFE, and Runtime comparing with it‚Äôs 1.0 and the other handcraft method like FlowField, EpicFlow, and so on. Nevertheless, Runtime is marginally longer than the original FlowNet.   4. Limitation   Its runtime is largely slow to use it real-time application. Because It can process about 7 ~8 fps. So, It is needed to decrease computation cost in future work. That‚Äôs exactly Lite-FlowNet!   All credit by Eddy Ilg et al., ‚ÄúFlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks‚Äù., CVPR 2017  ","categories": ["ML"],
        "tags": ["CV"],
        "url": "/ml/ML_Flow-Net_Summary/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] Pyramid Stereo Matching Network Paper One-page Summary",
        "excerpt":"1. Abstraction   I think it is quite insightful to introduce the spatial pyramid Pooling concept to the stereo matching field. And by doing so, It achieves SOTA depth estimation result! I will cover briefly paper about the entire network structure and look more closely SSP Module and 3D CNN part because it is the main contribution of the paper.   2. Overall architecture      Roughly we can divide PSMNet into three-part. Firstly, It extracts features using CNN that uses (3x3) filter gradually make 1/4 x 1/4 Feature map. Secondly, It hierarchically incorporates context information with the spatial pyramid pooling (SPP) module. And lastly, It regularizes cost volume (W x H x Disparity x Feature) by using 3D CNN that is made up of stacked multiple hourglass network. Let detail main contribution of this paper that are SPP module and 3D CNN.   3. Contribution   a) Spatial Pyramid Pooling (SPP) Module      As we can see in the left figure, the SPP Module incorporates context information by using average pooling. Why it could incorporate contextual information?   Using four different sizes of average pooling, it incorporates features into 4 scales and generates output by concatenating them into 4D cost volume that has W x H x Disparity x Feature dimension. doing so, It can make utilize the various aspect of feature of image data.      b) 3D CNN   In the 3D CNN part, Get a cost volume as input. Then It uses a Stacked hourglass to learn more context information to regularize cost volume to get estimated depth.   Let think about why it should be a Stacked hourglass structure? As seen in the figure, the word ‚Äúhourglass‚Äù come from encoder-decoder like architecture. It learns something by compressing into an encoded dimension and expanding it into original ones. In this process, It is easier to learn more incorporated context information. At last, three-loss is used by being weighted summation.   4. Result      As we expected, PSMNet gets a SOTA result with comparable runtime in KITTI 2015 dataset. It also has an end-to-end manner. With introducing, the significant idea that using SPP module and stacked hourglass structure in the stereo matching network!   All credit by Chang et al., ‚ÄúPyramid Stereo Matching Network‚Äù., CVPR 2018  ","categories": ["ML"],
        "tags": ["CV"],
        "url": "/ml/ML_PSM_Net/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] SfMLearner Paper One-page Summary",
        "excerpt":"      ","categories": ["ML"],
        "tags": ["TIL"],
        "url": "/ml/ML_SfMLearner_paper/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] NetVLAD Paper One-page Summary",
        "excerpt":"   ","categories": ["ML"],
        "tags": ["TIL"],
        "url": "/ml/ML_-NetVLAD/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] SegNet Paper One-page Summary",
        "excerpt":"      ","categories": ["ML"],
        "tags": ["TIL"],
        "url": "/ml/ML_SegNet/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] 'Bottom Up and Top Down Attention for Image' Paper One-page Summary",
        "excerpt":"   ","categories": ["ML"],
        "tags": ["TIL"],
        "url": "/ml/ML_Bottom-Up-and-Top-Down-Attention-for-Image/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Java] Queue ÏÇ¨Ïö©Î≤ï",
        "excerpt":"javaÏùò Queue classÏùò ÎåÄÌëúÏ†ÅÏù∏ methodÎì§ÏùÑ Ï†ïÎ¶¨ÌïòÎ©¥ Îã§ÏùåÍ≥º Í∞ôÎã§.   // ÎùºÏù¥Î∏åÎü¨Î¶¨ import import java.util.LinkedList; import java.util.Queue;  // LinkedListÎ•º ÌôúÏö©ÌïòÏó¨ Queue Ï¥àÍ∏∞Ìôî (Create) Queue&lt;Integer&gt; q = new LinkedList&lt;&gt;(); // Integer ÎßêÍ≥†ÎèÑ Îã§Î•∏ DataType GenericÏúºÎ°ú ÏÇ¨Ïö©Í∞ÄÎä•  // ÏÇΩÏûÖ (Update) q.add(1); // ÏÇΩÏûÖÏóê ÏÑ±Í≥µÏãú true, Ïã§Ìå®ÌïòÏòÄÏùÑ Í≤ΩÏö∞ Exception Î∞òÌôò  q.offer(2); // ÏÇΩÏûÖÏóê ÏÑ±Í≥µÏãú true, Ïã§Ìå®ÌïòÏòÄÏùÑ Í≤ΩÏö∞ false Î∞òÌôò   // Ï∞∏Ï°∞ (Read) queue.peek(); // QueueÏùò Ï≤´Î≤àÏß∏ Í∞í Ï∞∏Ï°∞  // Î∞òÌôò (Read and Delete) q.poll(); // QueueÏùò Ï≤´Î≤àÏß∏ Í∞íÏùÑ Î∞òÌôò. ÎπÑÏñ¥ÏûàÎã§Î©¥ null Î∞òÌôò  // Ï†úÍ±∞ (Delete) q.remove(); // QueueÏùò Ï≤´Î≤àÏß∏ Í∞í Ï†úÍ±∞ q.clear(); // QueueÏùò Í∞í Ï†ÑÏ≤¥ Ï¥àÍ∏∞Ìôî  // ÏÇ¨Ïù¥Ï¶à ÌôïÏù∏ q.size()   Ïó¨Í∏∞ÏÑú offer()ÏôÄ add()Í∞Ä Í∏∞Îä•Ïù¥ Ï§ëÎ≥µÎêúÎã§.   Î¨ºÎ°† ExceptionÏùÑ Î∞úÏÉùÏãúÏºú ÌîÑÎ°úÍ∑∏Îû®ÏùÑ Ï§ëÎã® ÏãúÏºúÏïºÌïòÎäî Í≤ΩÏö∞ÎèÑ ÏûàÍ≤†ÏßÄÎßå.   ÏïåÍ≥†Î¶¨Ï¶ò Î¨∏Ï†úÌíÄÏù¥Ïóê ÌïúÌï¥ÏÑúÎäî offerÏùò false Í∞íÏùÑ Î∞õÏïÑÏÑú Ï≤òÎ¶¨ÌïòÎäî Í≤ÉÏù¥ ÎçîÏö± Í∞ÑÌé∏Ìï† Í≤ÉÏúºÎ°ú Î≥¥Ïù∏Îã§.  ","categories": ["Java"],
        "tags": ["TIL"],
        "url": "/java/Java_Queue/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[IntelliJ] Useful IntelliJ keyboard shortcut for Mac",
        "excerpt":"IntelliJ Usefull Shortcut List      Cmd + Shift + A            IntelliJ find include configuration, files, actions, and so on.           Cmd + K            Git commit           Cmd + Shift+  K            Git push           Opt + Enter            Import method‚Äôs library       Generate Override(implemented) Method       Generate ‚Äústatic import~‚Äù for method           Cmd + Shift + Enter            Auto-Complete remained code line, and move to next line           Cmd + Opt + V            Generate local variable with blocked(or cursored line) codes (Ìï¥Îãπ Î©îÏÜåÎìúÏùò Í≤∞Í≥º Í∞íÏùÑ Î≥ÄÏàòÏóê Ìï†Îãπ)       Generate return ??           Cmd + Shift + T            Generate Test Class for selected class           Ctrl + R            build and run again  as just before           Cmd + Opt + N            Convert blocked codes as inline style           Ctrl + T            Give a possible Refactoring list           Cmd + E            Show the recently used files list           Cmd + P            Show parameter list of method           Shift + F6            Rename variables only after selected           Cmd + Opt + M            Generate Method in current class with blocked codes           Ctrl + tab(or + shift)            Change Opened window to next one (or reverse)           cmd+opt+v            Introduce Variable          ","categories": ["Dev"],
        "tags": ["TIL","IntelliJ"],
        "url": "/dev/Spring_intellij_keymap/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Git] git add, commit, pushÎ•º Ìïú Î™ÖÎ†πÏñ¥Î°ú ÎÅùÎÇ¥Í∏∞",
        "excerpt":"Î∞úÎã®   Ïó¨Îü¨ ÏÇ¨ÎûåÏù¥ Ìï®Íªò ÏûëÏóÖÌïòÎäî Í≥µÍ∞ÑÏù¥ ÏïÑÎãå, ÌòºÏûêÎßå ÏÇ¨Ïö©ÌïòÎäî Í∞úÏù∏ repoÏóêÎèÑ Ìïú Í∏ÄÏûêÎßå ÏàòÏ†ïÌï¥ÎèÑ ÏµúÏ¢ÖÏ†ÅÏúºÎ°ú github repoÏóê Î∞òÏòÅÎ•º ÌïòÍ∏∞ÏúÑÌï¥ÏÑúÎäî git add . =&gt; git commit -m ‚Äúmsg‚Äù =&gt; git pushÎ•º Î™®Îëê terminalÏóê ÏûëÏÑ±Ìï¥Ï£ºÏñ¥Ïïº ÌñàÎã§.   Ïù¥Í≤å Ïñ¥Îäê ÏàúÍ∞Ñ ÏÉÅÎãπÏù¥ Î≤àÍ±∞Î°≠Îã§Í≥† ÎäêÍª¥Ï†∏ Íµ¨Í∏ÄÎßÅ ÌïòÎçò Ï§ë, Ï¢ãÏùÄ Î∞©Î≤ïÏù¥ ÏûàÏñ¥ Ïù¥Î•º Í≥µÏú†ÌïòÍ≥†Ïûê ÌïúÎã§.   Î∞©Î≤ï   Î∞©Î≤ïÏùÄ Í∞ÑÎã®ÌïúÎç∞ Mac OSÏùò Í≤ΩÏö∞ root pathÏóêÏÑú .bash_profileÏóê (.bashrc ÏïÑÎãò Ï£ºÏùò)/ window OSÏùò Í≤ΩÏö∞ .bashrc ÌååÏùº ÏïàÏóê ÏïÑÎûòÏùò Ìï®ÏàòÎ•º Ï∂îÍ∞ÄÌï¥Ï£ºÎ©¥ ÎêúÎã§.   # Shortcut for # git add . =&gt; git commit -m \"$*\" =&gt; git push origin master function lazygit() {     git add .     git commit -a -m \"$*\"     git push }   Í∑∏Î¶¨Í≥† Î≥ÄÍ≤Ω ÏÇ¨Ìï≠ÏùÑ terminalÏóê Î∞òÏòÅÌï¥Ï£ºÍ∏∞ ÏúÑÌïòÏó¨ terminalÏóêÏÑú ÏïÑÎûòÏùò Î™ÖÎ†πÏñ¥Î•º Ïã§Ìñâ ÏãúÏºúÏ£ºÎ©¥ ÎÅù!   source ~/.bash_profile   Í∑∏Îü¨Î©¥ lazygit message Îßå terminalÏóê ÏûÖÎ†•ÌïòÎ©¥   git add . =&gt; git commit -m ‚Äúmessage‚Äù =&gt; git push origin masterÎ•º ÌïúÎ≤àÏóê ÏàòÌñâÌï¥Ï§ÄÎã§.   Í≤∞Í≥º      ÏúÑ Í∑∏Î¶ºÍ≥º Í∞ôÏù¥ lazygit add python team noteÎùºÍ≥† terminalÏóê ÏûÖÎ†•ÌïòÎ©¥   git add . =&gt; git commit -m ‚Äúadd python team note‚Äù =&gt; git push origin masterÍ∞Ä   Ìïú Î™ÖÎ†πÏñ¥Î°ú ÏàúÏ∞®Ï†ÅÏúºÎ°ú ÏàòÌñâÎêòÏóàÏùåÏùÑ Ïïå Ïàò ÏûàÎã§.      Ïã§Ï†úÎ°ú remote repositoryÏóêÎèÑ ÏûòÎêú Í≤ÉÏùÑ ÌôïÏù∏Ìï† Ïàò ÏûàÎã§.   Ï∞∏Ï°∞:¬†https://stackoverflow.com/questions/19595067/git-add-commit-and-push-commands-in-one  ","categories": ["Dev"],
        "tags": ["TIL"],
        "url": "/dev/Dev_git-add,-commit,-push-%ED%95%9C%EB%B2%88%EC%97%90-%ED%95%98%EA%B8%B0/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÎÑ§Ìä∏ÏõåÌÅ¨ (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/43162   ÌíÄÏù¥   1. BFS     2. Union&amp;Find     ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Îì±Íµ£Í∏∏ (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/42898   ÌíÄÏù¥   ''' Strategy number of way to reaching (x, y) = N(x, y) = N(x-1, y) + N(x, y-1) '''  def solution(m, n, puddles):     # init graph     graph = [[0]*m for _ in range(n)]          # set start point as 1     graph[0][0] = 1          # set puddles poin as -1     for y, x in puddles:         graph[x-1][y-1] = -1              # DP with n x m graph(= memorization)     for x in range(0, n):         for y in range(0, m):             # if current point is not a puddle             if graph[x][y] != -1:                 # if upward is not puddle add number of way that (x-1 , y) can reached                 if 0 &lt;= x-1 and graph[x-1][y] != -1:                     graph[x][y] += graph[x-1][y]                  # if leftside is not puddle add number of way that (x , y-1) can reached                 if 0 &lt;= y-1 and graph[x][y-1] != -1:                     graph[x][y] += graph[x][y-1]               return graph[n-1][m-1]%(1000000007)   print(solution(4, 3, [[2, 2]]))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EB%93%B1%EA%B5%A3%EA%B8%B8_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] NÏúºÎ°ú ÌëúÌòÑ (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/42895?language=python3   ÌíÄÏù¥   def solution(N, number):     # When number = N     if N == number:         return 1          # 0. Init ans     ans = -1      # 1. Initialize Set     s = [set() for _ in range(8)]      # 2. Add basic N*i numbers     for i in range(1, 9):         s[i-1].add(int(str(N)*i))      # 3. DP     for i in range(1, 8):         '''          range(i)Ïùò Í≤ΩÏö∞ 3 =&gt; (0, 2), (1, 1), (2, 0) Ï§ëÏã¨ÏùÑ Í∏∞Ï§ÄÏúºÎ°ú Ï§ëÎ≥µ Î∞úÏÉù         range(i//2 + 1)Ïùò Í≤ΩÏö∞ 3 =&gt; (0, 2), (1, 1 )          '''         for j in range(i//2 + 1):             for op1 in s[j]:                 for op2 in s[i-j-1]:                     s[i].add(op1 + op2)                     s[i].add(op1 - op2)                     s[i].add(op2 - op1)                     s[i].add(op1 * op2)                     if op2 != 0:                         s[i].add(op1//op2)                     if op1 != 0:                         s[i].add(op2//op1)             if number in s[i]:                 ans = i + 1                 return ans          return ans  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","DP"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_N%EC%9C%BC%EB%A1%9C_%ED%91%9C%ED%98%84_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Í∞ÄÏû• Î®º ÎÖ∏Îìú (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/49189   ÌíÄÏù¥   import heapq  def solution(n, edge):     INF = int(1e9)          graph = [[] for _ in range(n+1)]     distance = [INF]*(n+1)          for a, b in edge:         graph[a].append((b, 1))         graph[b].append((a, 1))      dijkstra(graph, distance, 1)      distance.sort(reverse=True)     '''     # list method countÎ°ú ÎåÄÏ≤¥ Í∞ÄÎä•     max_dist = distance[1]     for dist in distance:         if max_dist == dist:             ans += 1     '''     print(distance)      # return distance.count(distance[1])     return distance.count(max(distance[1:]))  # Îã§ÏùµÏä§Ìä∏Îùº ÏïåÍ≥†Î¶¨Ï¶ò def dijkstra(graph, distance, start):     q = []     heapq.heappush(q, (0, start))     distance[start] = 0      while q:         dist, now = heapq.heappop(q)          if dist &gt; distance[now]:             continue          for v, d in graph[now]:             cost = dist + d              if cost &lt; distance[v]:                 distance[v] = cost                 heapq.heappush(q, (cost, v))      return    # ÏòàÏãú Í∞í Ï∂úÎ†• print(solution(6, [[3, 6], [4, 3], [3, 2], [1, 3], [1, 2], [2, 4], [5, 2]]))  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Îã§ÏùµÏä§Ìä∏Îùº"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EA%B0%80%EC%9E%A5%EB%A8%BC%EB%85%B8%EB%93%9C_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÏûÖÍµ≠Ïã¨ÏÇ¨ (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/43238   ÌíÄÏù¥   def solution(n, times):          left, right = 1, max(times)*n      while left &lt; right:         total = 0         mid = (left+right)//2          for t in times:             total += mid // t          if total &gt;= n:             right = mid         else:             left = mid+1     # print(left, right)          return left   print(solution(2130, [7, 10]))  # ref: https://bit.ly/3pvyFad  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Ïù¥Î∂ÑÌÉêÏÉâ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EC%9E%85%EA%B5%AD%EC%8B%AC%EC%82%AC_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Ï∂îÏÑù Ìä∏ÎûòÌîΩ (java)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/17676   ÌíÄÏù¥   import org.junit.jupiter.api.Test;  import static org.junit.jupiter.api.Assertions.assertEquals;  class Solution {     public int solution(String[] lines) {         int ans = 0;         int[] startInterval = new int[lines.length];         int[] endInterval = new int[lines.length];          getInterval(lines, startInterval, endInterval);          int startOverlapInterval = findMaxOverlapInterval(startInterval, endInterval, startInterval);         int endOverlapInterval = findMaxOverlapInterval(startInterval, endInterval, endInterval);          ans = startOverlapInterval &gt; endOverlapInterval ? startOverlapInterval : endOverlapInterval;          return ans;     }      private int findMaxOverlapInterval(int[] startInterval, int[] endInterval, int[] Interval) {         int maxOverlap = 0;          for (int i = 0; i &lt; Interval.length; i++) {             int cnt = 0;             int startTime = Interval[i];             int endTime = Interval[i] + 999;              for (int j = 0; j &lt; startInterval.length; j++) {                 if (startTime &lt;= startInterval[j] &amp;&amp; startInterval[j] &lt;= endTime) {                     cnt++;                 } else if (startTime &lt;= endInterval[j] &amp;&amp; endInterval[j] &lt;= endTime) {                     cnt++;                 } else if (startInterval[j] &lt;= startTime &amp;&amp; endTime &lt;= endInterval[j]) {                     cnt++;                 }             }              maxOverlap = maxOverlap &gt; cnt? maxOverlap: cnt;         }          return maxOverlap;     }      private static void getInterval(String[] lines, int[] startInterval, int[] endInterval) {         for (int i = 0; i &lt; lines.length; i++) {             String[] log = lines[i].split(\" \");             String[] responseTime = log[1].split(\":\");              int processingTime = (int) (Double.parseDouble(log[2].substring(0, log[2].length()-1)) * 1000);             int startTime = 0;             int endTime = 0;              endTime += Integer.parseInt(responseTime[0]) * 60 * 60 * 1000;             endTime += Integer.parseInt(responseTime[1]) * 60 * 1000;             endTime += Double.parseDouble(responseTime[2]) * 1000;              startTime = endTime - processingTime + 1;              startInterval[i] = startTime;             endInterval[i] = endTime;         }     }      public static void main(String[] args) {         String[] lines = {\"2016-09-15 00:00:00.000 3s\"};         int[] startInterval = new int[lines.length];         int[] endInterval = new int[lines.length];         getInterval(lines, startInterval, endInterval);         System.out.println(\"startInterval : \" + startInterval[0]);         System.out.println(\"endInterval : \" + endInterval[0]);     }       @Test     void Ï†ïÎãµ() {         String[] lines = {\"2016-09-15 00:00:00.000 3s\"};         int ans = 1;         assertEquals(ans, solution(lines));          lines = new String[] {\"2016-09-15 20:59:57.421 0.351s\", \"2016-09-15 20:59:58.233 1.181s\", \"2016-09-15 20:59:58.299 0.8s\", \"2016-09-15 20:59:58.688 1.041s\", \"2016-09-15 20:59:59.591 1.412s\", \"2016-09-15 21:00:00.464 1.466s\", \"2016-09-15 21:00:00.741 1.581s\", \"2016-09-15 21:00:00.748 2.31s\", \"2016-09-15 21:00:00.966 0.381s\", \"2016-09-15 21:00:02.066 2.62s\"};         ans = 7;         assertEquals(ans, solution(lines));          lines = new String[]{\"2016-09-15 00:00:00.000 2.3s\", \"2016-09-15 23:59:59.999 0.1s\"};         ans = 1;         assertEquals(ans, solution(lines));      } }  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EC%B6%94%EC%84%9D%ED%8A%B8%EB%A0%88%ED%94%BD_%EC%9E%90%EB%B0%94/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] [1Ï∞®] ÏÖîÌãÄÎ≤ÑÏä§ (python)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/17678   ÌíÄÏù¥   1. Ï≤òÏùå ÎßûÏ∂îÍ∏∞ ÏúÑÌï¥ ÏûëÏÑ±Ìïú ÏΩîÎìú   from collections import deque  # ÏÖîÌãÄ Î≤ÑÏä§ ÏãúÍ∞Ñ Ïñ¥Î†àÏù¥(Î∂Ñ Îã®ÏúÑ ex) 09:00 =&gt; 540) def nt_to_arr(n, t):     deptart_times = []     for i in range(n):         deptart_times.append(540+i*t)     return deptart_times # print(nt_to_arr(1, 10))   # Î¨∏ÏûêÏó¥ ÏãúÍ∞Ñ =&gt; Î∂ÑÎã®ÏúÑ ÏãúÍ∞Ñ Î≥ÄÌôò def timetable_to_arr(timetable):     arrive_times = []          for stamp in timetable:         hh, mm = stamp.split(\":\")         arrive_times.append(60*int(hh) + int(mm))      return arrive_times # print(timetable_to_arr([\"08:00\", \"08:01\", \"08:02\", \"08:03\"]))   # Î∂ÑÎã®ÏúÑ ÏãúÍ∞Ñ =&gt; Î¨∏ÏûêÏó¥ ÏãúÍ∞Ñ Î≥ÄÌôò def mtime_to_hhmm(minute):     hh, mm = divmod(minute, 60)      hh = str(hh) if hh &gt;= 10 else \"0\"+str(hh)     mm = str(mm) if mm &gt;= 10 else \"0\"+str(mm)      return hh+\":\"+mm # print(mtime_to_hhmm(601))   def solution(n, t, m, timetable):     departs = sorted(nt_to_arr(n, t))     arrives = sorted(timetable_to_arr(timetable))      q = deque(arrives)      for idx, time in enumerate(departs):         cnt0 = 0         cnt = 0         if idx == len(departs)-1:             for stamp in q:                 if stamp &lt;= time:                     cnt0 += 1             if cnt0 &lt; m:                 return mtime_to_hhmm(time)                        while q:             now = q.popleft()             if now &lt;= time:                 cnt += 1                 if cnt == m:                     if idx == len(departs)-1:                         cnt == m-1                         return mtime_to_hhmm(now-1)                     break             else:                 q.appendleft(now)                 break   # Ï†ïÎãµ ÎßûÎäîÏßÄ ÌôïÏù∏ timetable = [\"08:00\", \"08:01\", \"08:02\", \"08:03\"] print(solution(1, 1, 5, timetable)) timetable = [\"09:10\", \"09:09\", \"08:00\"] print(solution(2, 10, 2, timetable))  timetable = [\"09:00\", \"09:00\", \"09:00\", \"09:00\"] print(solution(2, 1, 2, timetable))  timetable = [\"00:01\", \"00:01\", \"00:01\", \"00:01\", \"00:01\"] print(solution(1, 1, 5, timetable))  timetable = [\"23:59\"] print(solution(1, 1, 1, timetable))  timetable =[\"23:59\",\"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\"] print(solution(10, 60, 45, timetable))   2. Refactoring Ìïú ÏΩîÎìú   # ÏÖîÌãÄ Î≤ÑÏä§ ÏãúÍ∞Ñ Ïñ¥Î†àÏù¥(Î∂Ñ Îã®ÏúÑ ex) 09:00 =&gt; 540) def nt_to_arr(n, t):     deptart_times = []     for i in range(n):         deptart_times.append(540+i*t)     return deptart_times  # Î¨∏ÏûêÏó¥ ÏãúÍ∞Ñ =&gt; Î∂ÑÎã®ÏúÑ ÏãúÍ∞Ñ Î≥ÄÌôò def timetable_to_arr(timetable):     arrive_times = []      for stamp in timetable:         hh, mm = stamp.split(\":\")         arrive_times.append(60*int(hh) + int(mm))      return sorted(arrive_times)  # Î∂ÑÎã®ÏúÑ ÏãúÍ∞Ñ =&gt; Î¨∏ÏûêÏó¥ ÏãúÍ∞Ñ Î≥ÄÌôò def mtime_to_hhmm(minute):     hh, mm = divmod(minute, 60)      hh = str(hh) if hh &gt;= 10 else \"0\"+str(hh)     mm = str(mm) if mm &gt;= 10 else \"0\"+str(mm)      return hh+\":\"+mm  import heapq  def solution(n, t, m, timetable):     departs = nt_to_arr(n, t)     arrives = timetable_to_arr(timetable)      for dept_time in departs:         if dept_time == departs[-1]:             cnt = 0             for arrive_time in arrives:                 if arrive_time &gt; dept_time:                     break                 cnt += 1             if cnt &lt; m:                 return mtime_to_hhmm(dept_time)                   cnt = 0         while arrives:              if arrives[0] &gt; dept_time:                 break                      now = arrives.pop(0)             cnt += 1             if dept_time == departs[-1] and cnt == m:                 return mtime_to_hhmm(now-1)                          if m == cnt:                 break           # ÏòàÏ†ú Ï†ïÎãµÏù¥ ÎßûÎäîÏßÄ ÌôïÏù∏ timetable = [\"08:00\", \"08:01\", \"08:02\", \"08:03\"] print(solution(1, 1, 5, timetable))  timetable = [\"09:10\", \"09:09\", \"08:00\"] print(solution(2, 10, 2, timetable))  timetable = [\"09:00\", \"09:00\", \"09:00\", \"09:00\"] print(solution(2, 1, 2, timetable))  timetable = [\"00:01\", \"00:01\", \"00:01\", \"00:01\", \"00:01\"] print(solution(1, 1, 5, timetable))  timetable = [\"23:59\"] print(solution(1, 1, 1, timetable))  timetable =[\"23:59\",\"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\", \"23:59\"] print(solution(10, 60, 45, timetable))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EC%85%94%ED%8B%80%EB%B2%84%EC%8A%A4_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Îã®Ïñ¥ Î≥ÄÌôò (java)",
        "excerpt":"Î¨∏Ï†ú   https://programmers.co.kr/learn/courses/30/lessons/43163?language=java   ÌíÄÏù¥   1. Ï≤òÏùå ÏãúÍ∞Ñ Ï¥àÍ≥ºÍ∞Ä ÎÇú ÏΩîÎìú   import org.junit.jupiter.api.Test; import java.util.Arrays; import static org.junit.jupiter.api.Assertions.assertEquals;  class Solution1 {      static int ans = 51;      public int solution(String begin, String target, String[] words) {         int answer = 0;         if (Arrays.stream(words).anyMatch(x -&gt; x == target)) {             return 0;         }          dfs(words, begin, target, 0);         return ans == 51? 0: ans;     }      public static boolean oneDiff(String a, String b) {         int cnt = 0;          for (int i = 0; i &lt; a.length(); i++) {             if (a.charAt(i) != b.charAt(i)) {                 cnt++;             }         }          return cnt == 1 ? true : false;     }      public static void dfs(String[] word, String begin, String target, int cnt) {         if (begin.equals(target)) { // ÎåÄÎ∞ï... //            System.out.println(\"check\");             if (cnt &lt; ans) { //                System.out.println(begin + target);                 ans = cnt;                 return;             }         } else if (cnt &gt; word.length) {             return;         }          for (int i = 0; i &lt; word.length; i++) {             if (oneDiff(begin, word[i])) {                 String[] newWord = new String[word.length - 1]; //                System.out.println(word.length - 1);                 for (int j = 0; j &lt; word.length; j++) {                     if (j &gt;= i &amp;&amp; j !=0) { //                        System.out.println(i + \" \" +j);                         newWord[j - 1] = word[j];                     } else {                         newWord[j] = word[j];                     }                 }                  dfs(word, word[i], target, cnt + 1); //                System.out.println(\"begin: \" + word[i] + \" target: \" + target);             }         }     }      @Test     public void Ï†ïÎãµ() {         String begin = new String(\"hit\");         String target = new String(\"cog\");         String[] words = {\"hot\", \"dot\", \"dog\", \"lot\", \"log\", \"cog\"};         assertEquals(4, solution(begin, target, words));          begin = \"hit\";         target = \"cog\";         words = new String[]{\"hot\", \"dot\", \"dog\", \"lot\", \"log\"};         ans = 0;         assertEquals(0, solution(begin, target, words));      }  }   2. Ï†ïÎãµ ÏΩîÎìú   class Solution {     // ÏïÑÎûòÏôÄ Í∞ôÏù¥ Í∑∏ÎÉ• Ï†ÑÏó≠Î≥ÄÏàò ÏÑ†Ïñ∏Ìï¥Ï£ºÎ©¥ Îê®     int ans = 51;     boolean[] visited;      public int solution(String begin, String target, String[] words) {         visited = new boolean[words.length];          dfs(words, begin, target, 0);          return ans == 51 ? 0 : ans;     }      private void dfs(String[] words, String begin, String target, int cnt) {         if (begin.equals(target)) {             ans = ans &gt; cnt ? cnt : ans;         }           for (int i = 0; i &lt; words.length; i++) {             if (!visited[i] &amp;&amp; check(begin, words[i])) {                 visited[i] = true;                 dfs(words, words[i], target, cnt + 1);                 // Îã§Ïùå Ï∞®Î°ÄÏùò dfsÎäî Ìï¥Îãπ nodeÎ•º Î∞©Î¨∏Ìï¥ÏïºÌï®ÏúºÎ°ú!                 visited[i] = false;             }         }     }      private boolean check(String begin, String word) {         int cnt = 0;          for (int i = 0; i &lt; word.length(); i++) {             if (begin.charAt(i) != word.charAt(i)) {                 cnt++;             }         }          return cnt == 1 ? true : false;     } }   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","dfs"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EB%8B%A8%EC%96%B4%EB%B3%80%ED%99%98_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B3%B5%EC%82%AC%EB%B3%B8/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÏàúÏúÑ (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   def solution(n, results):     ans = 0     INF = int(1e9)      # 2Ï∞®Ïõê Î¶¨Ïä§Ìä∏(Í∑∏ÎûòÌîÑ ÌëúÌòÑ)ÏùÑ ÎßåÎì§Í≥†, Î™®Îì† Í∞í Î¨¥ÌïúÏúºÎ°ú Ï¥àÍ∏∞Ìôî     graph = [[INF]*(n+1) for _ in range(n+1)]      # ÏûêÍ∏∞ ÏûêÏã†ÏóêÍ≤åÎ°úÏùò ÎπÑÏö© 0ÏúºÎ°ú Ï¥àÍ∏∞Ìôî     for i in range(1, n+1):         graph[i][i] = 0      # Í∞Å Í∞ÑÏÑ†Ïóê ÎåÄÌïú Ï†ïÎ≥¥Î•º ÏûÖÎ†•Î∞õÏïÑ, Í∑∏ Í∞íÏúºÎ°ú Ï¥àÍ∏∞Ìôî     for a, b in results:         graph[a][b] = 1         # graph[b][a] = 1      # Floyd Warshall(dp)     for k in range(1, n+1):         for a in range(1, n+1):             for b in range(1, n+1):                 graph[a][b] = min(graph[a][b], graph[a][k]+graph[k][b])      for a in range(1, n+1):         cnt = 0         for b in range(1, n+1):             if graph[a][b] != INF or graph[b][a] != INF:                 cnt += 1             if cnt == n:                 ans += 1      return ans   print(solution(5, [[4, 3], [4, 2], [3, 2], [1, 2], [2, 5]]))  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","ÌîåÎ°úÏù¥ÎìúÏôÄÏÉ¨"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EC%88%9C%EC%9C%84_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÎîîÏä§ÌÅ¨ Ïª®Ìä∏Î°§Îü¨ (java)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   /* 1. Ï†ÑÎûµ     1. ÏãúÏûë_ÏãúÍ∞Å Í∏∞Ï§ÄÏúºÎ°ú jobs arrayÎ•º Ï†ïÎ†¨ÌïúÎã§.     2. ÌòÑÏû¨ Ïã§Ìñâ_ÏãúÍ∞Ñ ÏïàÏóê ÏãúÏûë_ÏãúÍ∞ÅÏù¥ Ìè¨Ìï®ÎêòÎäî Í≤ΩÏö∞ ÏàòÌñâ_ÏãúÍ∞Ñ Í∏∞Ï§ÄÏúºÎ°ú pqÏóê ÎÑ£Í≥† Ïù¥ ÏàúÏÑúÎåÄÎ°ú Î∞òÌôòÌïúÎã§.  2. Ï†ïÌôïÏÑ± Ï¶ùÎ™Ö    (1) 1 ~ nÎ≤àÏß∏ ÏàòÌñâÎêòÎäî ÏûëÏóÖÏùò ÏàòÌñâÏãúÍ∞ÑÏùÑ rt1~n    (2) Ïù¥Îì§Ïùò ÏãúÏûëÏãúÍ∞ÑÏùÑ s1~n ÏúºÎ°ú ÎÇòÌÉÄÎÇ¥ÏóàÏùÑ Îïå Ï¥ù Ï≤òÎ¶¨_ÏãúÍ∞ÑÏùÄ      tot_runtime =     (rt1) + (rt1+rt2) + (rt1 + rt2 + rt3) + (rt1 + rt2 + rt3 +rt4)... - (s1 + s2 + s3 ...)     = n*(rt1) + (n-1)*(rt2) + (n-2)(rt3) ... - sigma_1_to_n_(s_i)   =&gt; Ï¶â, ÏûëÏóÖ ÏàòÌñâ ÏãúÍ∞ÑÏù¥ ÏûëÏùÄ ÏàúÏÑúÎåÄÎ°ú ÎÑ£Ïñ¥Ïïº ÏµúÏÜüÍ∞íÏùÑ Í∞ÄÏßÄÎäî Greedy PropertyÎ•º Í∞ÄÏßÑÎã§.  3. ÏãúÍ∞Ñ Î≥µÏû°ÎèÑ jobs Ï†ïÎ†¨ + pq ÏÇΩÏûÖ + pq Ïù∏Ï∂ú + const = O(nlg(n) + nlg(n) + nlg(n) + C) = O(nlg(n))  */  import java.util.Arrays; import java.util.PriorityQueue;  class Solution {     public int solution(int[][] jobs) {         int ans = 0;         int idx = 0;         int end = 0;         int cnt = 0;         int[] temp;          // Sort jobs with ÏãúÏûë ÏãúÍ∞Ñ Ïò§Î¶ÑÏ∞®ÏàúÏúºÎ°ú         Arrays.sort(jobs, (o1, o2) -&gt; o1[0] - o2[0]);         /*         // Check Sorted well         for (int[] e : jobs) {             System.out.printf(\"(%d, %d) \\n\", e[0], e[1]);         }         */          // pqÎ•º ÏûëÏóÖÏãúÍ∞ÑÏóê ÎåÄÌïòÏó¨ Ïò§Î¶ÑÏ∞®ÏàúÏúºÎ°ú ÏÑ†Ïñ∏         PriorityQueue&lt;int[]&gt; pq = new PriorityQueue&lt;int[]&gt;((o1, o2) -&gt; o1[1] - o2[1]);          // ÏûëÏóÖ ÏàòÌñâ ÏãúÏûë         while (cnt &lt; jobs.length) {             // 1. ÌòÑÏû¨ end ÏïàÏóê ÏãúÏûë ÏãúÍ∞ÅÏù¥ Ìè¨Ìï®ÎêòÎäî Î™®Îì† ÏûëÏóÖÎì§ pqÏóê Ï∂îÍ∞Ä             while (idx &lt; jobs.length &amp;&amp; end &gt;= jobs[idx][0]) {                 pq.add(jobs[idx++]);             }              // 2. ÎßåÏïΩ 1.Í≥º Í∞ôÏùÄ ÏûëÏóÖÏù¥ ÏóÜÎã§Î©¥ Îã§Ïùå ÏûëÏóÖÏùò ÏãúÏûë ÏãúÍ∞ÅÏùÑ endÎ°ú Î∞îÍøîÏ£ºÍ∏∞             if (pq.isEmpty()) {                 end = jobs[idx][0];              // 3. pqÏóêÏÑú ÏûëÏóÖ ÏãúÍ∞ÑÏù¥ ÏûëÏùÄ ÏàúÏÑúÎåÄÎ°ú Í∫ºÎÇ¥ÏÑú ansÏôÄ end Í∞±Ïã†             } else {                 temp = pq.poll();                 ans += (end + temp[1]) - temp[0];                 end = end + temp[1];                 cnt++;             }         }          // Ï†ïÎãµ Í∞í Î∞òÌôò: Ïó¨Í∏∞ÏÑú int/int =&gt; intÏûÑÏúºÎ°ú ÏÜåÏàòÏ†ê ÏïåÏïÑÏÑú Ï†àÏÇ¨!         return ans/cnt;     }  }   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EB%94%94%EC%8A%A4%ED%81%AC%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC_%EC%9E%90%EB%B0%94/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Î∏îÎ°ù Ïù¥ÎèôÌïòÍ∏∞ (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   from collections import deque   def get_next_pos(pos, board):     next_pos = []     (x1, y1), (x2, y2) = pos     # ÏÉÅÌïòÏ¢åÏö∞ Ïù¥ÎèôÏùÑ ÏúÑÌïú Î≥ÄÏàòÏÑ†Ïñ∏     dx = [1, -1, 0, 0]     dy = [0, 0, 1, -1]      # 1. ÏÉÅÌïòÏ¢åÏö∞ Ïù¥Îèô     for i in range(4):         if board[x1+dx[i]][y1+dy[i]] == 0 and board[x2+dx[i]][y2+dy[i]] == 0:             next_pos.append({(x1+dx[i], y1+dy[i]), (x2+dx[i], y2+dy[i])})      # ÏÑ∏Î°ú =&gt; Í∞ÄÎ°ú ÌöåÏ†Ñ     if y1 == y2:         # ÏôºÏ™ΩÏóêÏÑú Ïò§Î•∏Ï™Ω, Ïò§Î•∏Ï™ΩÏóêÏÑú ÏôºÏ™ΩÏúºÎ°ú ÌöåÏ†ÑÌïòÎäî Í≤ΩÏö∞         for i in [-1, 1]:             # Ïò§Î•∏Ï™Ω, ÌòπÏùÄ ÏôºÏ™ΩÏù¥ Îëò Îã§ ÎπÑÏñ¥ ÏûàÎã§Î©¥             if board[x1][y1+i] == 0 and board[x2][y2+i] == 0:                 next_pos.append({(x1, y1), (x1, y1+i)})                 next_pos.append({(x2, y2), (x2, y2+i)})     # Í∞ÄÎ°ú =&gt; ÏÑ∏Î°ú ÌöåÏ†Ñ     elif x1 == x2:         # ÏúÑÏóêÏÑú ÏïÑÎûòÎ°ú, ÏïÑÎûòÏóêÏÑú ÏúÑÎ°ú ÌöåÏ†ÑÌïòÎäî Í≤ΩÏö∞         for i in [-1, 1]:             # ÏúÑÏ™Ω ÌòπÏùÄ ÏïÑÎûòÏ™Ω Î™®Îëê ÎπÑÏñ¥ÏûàÎã§Î©¥             if board[x1+i][y1] == 0 and board[x2+i][y2] == 0:                 next_pos.append({(x1, y1), (x1+i, y1)})                 next_pos.append({(x2, y2), (x2+i, y2)})     # Îã§ÏùåÏóê Í∞à Ïàò ÏûàÎäî ÏúÑÏπòÎì§ Î™®Îëê Î∞òÌôò     return next_pos   def solution(board):     n = len(board)     # ÏòàÏô∏Ï≤òÎ¶¨Ïùò Ìé∏ÏùòÎ•º ÏúÑÌïòÏó¨ Ï£ºÏñ¥ÏßÑ ÏúÑÏπò ÏµúÏô∏Í≥ΩÏùÑ 1Î°ú Ï±ÑÏö¥ new_board ÏÉùÏÑ±     new_board = [[1]*(n+2) for _ in range(n+2)]     # Ï§ëÏã¨Î∂ÄÎ•º boardÎ°ú ÎåÄÏ≤¥     for i in range(1, n+1):         for j in range(1, n+1):             new_board[i][j] = board[i-1][j-1]      # BFS Algorithm     q = deque()     pos = {(1, 1), (1, 2)}     visited = []     q.append((pos, 0))     visited.append(pos)     while q:         pos, cost = q.popleft()         # Ï¢ÖÏ†êÏùÑ ÎßûÎã•ÎìúÎ¶¨Î©¥ costÎ•º Î∞òÌôòÌïòÍ≥† Ï¢ÖÎ£å         if (n, n) in pos:             return cost         # get_next_posÌï®ÏàòÎ•º ÌôúÏö©ÌïòÏó¨ bfsÎ•º ÏàòÌñâ         for next_pos in get_next_pos(pos, new_board):             if next_pos not in visited:                 visited.append(next_pos)                 q.append((next_pos, cost+1))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ","bfs"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EB%B8%94%EB%A1%9D%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0_%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B3%B5/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÌñâÎ†¨ ÌÖåÎëêÎ¶¨ ÌöåÏ†ÑÌïòÍ∏∞ (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   def rotate(graph, pos):     x0, y0, x1, y1 = pos     temp = graph[x0-1][y1-1]      # Î∂ÅÏ™Ω     graph[x0-1][y0:y1] = graph[x0-1][y0-1:y1-1]     _min = min(min(graph[x0-1][y0:y1]), temp)      # ÏÑúÏ™Ω     for i in range(x0-1, x1-1):         graph[i][y0-1] = graph[i+1][y0-1]         _min = min(_min, graph[i][y0-1])      # ÎÇ®Ï™Ω     graph[x1-1][y0-1:y1-1] = graph[x1-1][y0:y1]     _min = min(_min, min(graph[x1-1][y0-1:y1-1]))      # ÎèôÏ™Ω     for i in range(x1-1, x0, -1):         # print(i)         graph[i][y1-1] = graph[i-1][y1-1]         _min = min(_min, graph[i][y1-1])      graph[x0][y1-1] = temp      return _min   def solution(rows, columns, queries):     answer = []     graph = [[i + columns*j for i in range(1, columns+1)] for j in range(rows)]      for pos in queries:         answer.append(rotate(graph, pos))      return answer   # queries = [[2,2,5,4],[3,3,6,6],[5,1,6,3]] # print(solution(6, 6, queries))  queries = [[1, 1, 2, 2], [1, 2, 2, 3], [2, 1, 3, 2], [2, 2, 3, 3]] print(solution(3, 3, queries))  # queries = [[2,2,5,4],[3,3,6,6],[5,1,6,3]] # print(solution(6, 6, queries))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%ED%96%89%EB%A0%AC%ED%85%8C%EB%91%90%EB%A6%AC%ED%9A%8C%EC%A0%84%ED%95%98%EA%B8%B0_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Í¥ÑÌò∏Î≥ÄÌôò (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   # ÏµúÏÜå \"Í∑†ÌòïÏû°Ìûå Í¥ÑÌò∏ Î¨∏ÏûêÏó¥\" Ïù∏Îç±Ïä§ Î∞òÌôò def balanced_index(p):     cnt = 0     for i in range(len(p)):         if p[i] == '(':             cnt += 1         else:             cnt -= 1         if cnt == 0:             return i   # \"Í∑†ÌòïÏû°Ìûå Í¥ÑÌò∏ Î¨∏ÏûêÏó¥\"Ïù∏ pÍ∞Ä 'Ïò≥ÏùÄ Í¥ÑÌò∏ Î¨∏ÏûêÏó¥'Ïù∏ÏßÄ ÌåêÎã® def check_right(p):     cnt = 0     for i in p:         if i == '(':             cnt += 1         else:             cnt -= 1         if cnt &lt; 0:             return False     return True   def solution(p):     # 1. Îπà Î¨∏ÏûêÏó¥Ïù∏ Í≤ΩÏö∞ Í∑∏ÎåÄÎ°ú Î∞òÌôò     if p == '':         return p     # 2. Î¨∏ÏûêÏó¥ wÎ•º 'Í∑†ÌòïÏû°Ìûå Í¥ÑÌò∏ Î¨∏ÏûêÏó¥' u, vÎ°ú Î∂ÑÎ¶¨     i = balanced_index(p)     u, v = p[:i+1], p[i+1:]     # 3. Î¨∏ÏûêÏó¥ uÍ∞Ä 'Ïò¨Î∞îÎ•∏ Í¥ÑÌò∏ Î¨∏ÏûêÏó¥'Ïù¥ÎùºÎ©¥ vÏóê ÎåÄÌïòÏó¨ Îã§Ïãú ÏàòÌñâ     if check_right(u):         return u + solution(v)     # 4. Î¨∏ÏûêÏó¥ uÍ∞Ä \"\"\"\"Ïù¥ ÏïÑÎãàÎùºÎ©¥ ÏïÑÎûòÏùò Í≥ºÏ†ïÏùÑ ÏàòÌñâ     # 4-1     answer = '('     # 4-2     answer += solution(v)     # 4-3     answer += ')'     # 4-4     u = list(u[1:-1])     for j in range(len(u)):         if u[j] == '(':             u[j] = ')'         else:             u[j] = '('     answer += ''.join(u)     # 4-5     return answer   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%EA%B4%84%ED%98%B8%EB%B3%80%ED%99%98_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÌîÑÎ¶∞ÌÑ∞ (java)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   /* ÏãúÍ∞Ñ Î≥µÏû°ÎèÑ: O(n^2)  1 2 3 4 1 , 0 =&gt; 2 , 3 4, 1 =&gt;  4, 1, 1, 2 ,3 =&gt; 1-3 1-4 1-5 4-1 1-2   */  import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.Test;  import java.util.Collections; import java.util.PriorityQueue;  class Solution {     public int solution(int[] priorities, int location) {         int ans = 0;          PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;Integer&gt;(Collections.reverseOrder());          for (int element : priorities) {             pq.offer(element); //            System.out.println(pq);         }          while (!pq.isEmpty()) {             for (int i = 0; i &lt; priorities.length; i++) {                 if (pq.peek() == priorities[i]) {                     pq.poll();                     ans++;                     if (i == location) {                         return ans;                     }                 }             }         }         return ans;      }       @Test     public void Ï†ïÎãµ() {         int[] priorities = new int[] {2, 1, 3, 2}; //        ÏúÑ ÏïÑÎûò Îëò Îã§ Í∞ÄÎä•, ÏïÑÎûòÎäî Ìé∏ÏùòÏÉÅ Ïª¥ÌååÏùºÎü¨Í∞Ä ÏßÄÏõêÌï¥Ï£ºÎäî convention         //        int[] priorities = {2, 1, 3, 2};         Assertions.assertEquals(1, solution(priorities, 2));          priorities = new int[]{1, 1, 9, 1, 1, 1};         Assertions.assertEquals(5, solution(priorities, 0));     } }   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_-%ED%94%84%EB%A6%B0%ED%84%B0_%EC%9E%90%EB%B0%94/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] H-index (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   def solution(citations):     citations.sort(reverse=True)     ans = 0      for idx, cite in enumerate(citations):         if (idx+1) &lt;= cite:             ans = idx+1     return ans   print(solution([3, 0, 6, 1, 5])) print(solution([7, 3, 3, 3, 3])) print(solution([7, 3]))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_H-index_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] Î©îÎâ¥ Î¶¨Îâ¥Ïñº (java)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   /*     # Ï†ÑÎûµ     1. courseÏùò Í∞úÏàò ÎßåÌÅº ordersÏùò ÏõêÏÜåÏóêÏÑú Î¨∏ÏûêÏó¥ÏùÑ combinationÏúºÎ°ú Ï∂îÏ∂úÌï¥ÎÇ∏Îã§.     2. SetÏóê ÎÑ£Í≥†, ÎßåÏïΩ SetÏóê Ïù¥ÎØ∏ ÏûàÎã§Î©¥ ans arrayÏóê Ï∂îÍ∞Ä ÏãúÌÇ®Îã§.     3. Í∑∏Î¶¨Í≥† ans arrayÎ•º sortÌïòÏó¨ Î∞òÌôò  */  import org.junit.jupiter.api.Test;  import java.util.*;  import static org.junit.jupiter.api.Assertions.assertArrayEquals;  class Solution {     static List&lt;String&gt; cb;      public String[] solution(String[] orders, int[] course) {         // 1. combination(cb)Ïóê dfsÎ•º Ïù¥Ïö©ÌïòÏó¨ course ÏõêÏÜåÏôÄ Í∏∏Ïù¥ Í∞ôÏùÄ ÌõÑÎ≥¥ Íµ∞ÏùÑ Î™®Îëê Îã¥ÎäîÎã§.         cb = new ArrayList&lt;String&gt;();          for (String orderString : orders) {             char[] orderArr = orderString.toCharArray();             // ÏïåÌååÎ≤≥ ÏàúÏúºÎ°ú Ï†ïÎ†¨             Arrays.sort(orderArr);              for (int idx = 0; idx &lt; orderArr.length - 1; idx++) {                 dfs(orderArr, idx, 1, course, String.valueOf(orderArr[idx]));             }         }          // 2. MapÏùÑ ÏÑ†Ïñ∏ÌïòÏó¨ k, vÎ°ú Îã¥Í≥†, keyÎäî keySetArrÏóê Îã¥ÎäîÎã§.         Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();         for (String orderName : cb) {             map.put(orderName, map.getOrDefault(orderName, 0)+1);         }         List&lt;String&gt; keySetArr = new ArrayList&lt;&gt;(map.keySet());          // 3. keySetArrÎ•º v Í∞íÏù¥ ÌÅ∞ ÏàúÏúºÎ°ú Îã¥ÎäîÎã§.         Collections.sort(keySetArr, (o1, o2) -&gt; map.get(o2) - map.get(o1));          // 4. course ÏõêÏÜåÏôÄ Í∞ôÏùÄ Í∏∏Ïù¥ÏôÄ ÏµúÎåÄÏùò vÎ•º Í∞ÄÏßÄÎäî ÏõêÏÜåÎ•º ansArrÏóê ÎÑ£Ïñ¥Ï§ÄÎã§.         List&lt;String&gt; ansArr = new ArrayList&lt;&gt;();         int max;         for (int i = 0; i &lt; course.length; i++) {             max = 0;             for (String orderName : keySetArr) {                 if (map.get(orderName) &gt;= 2 &amp;&amp; orderName.length() == course[i]) {                     if (map.get(orderName) &gt;= max) {                         max = map.get(orderName);                         ansArr.add(orderName);                     }                 }             }         }         // 5. ansArrÎ•º Ï†ïÎ†¨ÌïúÎã§.         Collections.sort(ansArr);          // 6. String[]Î°ú Î∞îÍæ∏Ïñ¥ Î∞òÌôòÌïúÎã§.         String[] ans = new String[ansArr.size()];         ansArr.toArray(ans);         return ans;      }      void dfs(char[] arr, int idx, int length, int[] course, String str) {         if (Arrays.stream(course).anyMatch(x -&gt; x == length)) {             cb.add(str);         }         for (int i = idx + 1; i &lt; arr.length; i++) {             dfs(arr, i, length + 1, course, str + String.valueOf(arr[i]));         }     }      /*     [a, b, c, d]     =&gt; ab, ab, ad     =&gt; bc, bd,     =&gt; cd     @Test     void Ï†ïÎãµ() {         String[] orders = {\"ABCFG\", \"AC\", \"CDE\", \"ACDE\", \"BCFG\", \"ACDEH\"};         int[] course = {2, 3, 4};         String[] ans = {\"AC\", \"ACDE\", \"BCFG\", \"CDE\"};         assertArrayEquals(ans, solution(orders, course));          orders = new String[]{\"ABCDE\", \"AB\", \"CD\", \"ADE\", \"XYZ\", \"XYZ\", \"ACD\"};         course = new int[]{2, 3, 5};         ans = new String[]{\"ACD\", \"AD\", \"ADE\", \"CD\", \"XYZ\"};         assertArrayEquals(ans, solution(orders, course));          orders = new String[]{\"XYZ\", \"XWY\", \"WXA\"};         course = new int[]{2, 3, 4};         ans = new String[]{\"WX\", \"XY\"};         assertArrayEquals(ans, solution(orders, course));     }  */ }   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Íµ¨ÌòÑ"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%EB%A9%94%EB%89%B4%EB%A6%AC%EB%89%B4%EC%96%BC_%EC%9E%90%EB%B0%94/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÌÉÄÍ≤ü ÎÑòÎ≤Ñ (python)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥      global ÏÇ¨Ïö©ÌïòÏßÄ ÏïäÏùÄ ÌíÄÏù¥   def solution(numbers, target):     global ans          # arr = numbers     # num =  target      ans = 0          dfs(numbers, target, 0, 0)     return ans   def dfs(numbers, target, _sum, idx):     global ans          if idx == len(numbers):         if _sum == target:             ans += 1         return          # print(idx)          dfs(numbers, target, _sum + numbers[idx], idx+1)     dfs(numbers, target, _sum - numbers[idx], idx+1)  print(solution([1, 1, 1, 1, 1], 3))      globalÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ parameterÎ•º ÎÑòÍ∏∞ÏßÄ ÏïäÎäî ÏΩîÎìú   def solution(numbers, target):     global ans, arr, num          arr = numbers     num =  target     ans = 0          dfs(0, 0)     return ans   def dfs(_sum, idx):     global ans, arr, num          if idx == len(arr):         if _sum == num:             ans += 1         return          dfs(_sum + arr[idx], idx+1)     dfs(_sum - arr[idx], idx+1)  print(solution([1, 1, 1, 1, 1], 3))   ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","dfs"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%ED%83%80%EA%B2%9F%EB%84%98%EB%B2%84_%ED%8C%8C%EC%9D%B4%EC%8D%AC/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§] ÌÅ∞ Ïàò ÎßåÎì§Í∏∞ (java)",
        "excerpt":"Î¨∏Ï†ú   Î¨∏Ï†ú ÎßÅÌÅ¨   ÌíÄÏù¥   class Solution {     public static String solution(String number, int k) {         // StringBuilderÎ•º Ïì∞Îäî Í≤ÉÏù¥ char[] Î≥¥Îã§ Îçî Îπ†Î•¥Í≥† Í∞ÑÌé∏Ìï®         //        StringBuilder ans = new StringBuilder();         char[] ans = new char[number.length() - k];          int left = 0;         int max;         char tempChar;          for (int i = 0; i &lt; number.length() - k; i++) {             max = -1;             for (int j = left; j &lt;= k + i; j++) {                 tempChar = number.charAt(j);                 if (max &lt; tempChar - '0') {                     max = tempChar - '0';                     left = j + 1;                 }             }             ans[i]= (char)(max+'0');         }  //        return ans.toString();         return String.valueOf(ans);     } /*     @Test     public void Ï†ïÎãµ() {         assertEquals(\"94\", solution(\"1924\", 2));         assertEquals(\"3234\", solution(\"1231234\", 3));         assertEquals(\"775841\", solution(\"4177252841\", 4));     }  */ }  ","categories": ["PS"],
        "tags": ["ÌîÑÎ°úÍ∑∏ÎûòÎ®∏Ïä§","Í∑∏Î¶¨Îîî"],
        "url": "/ps/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4_%ED%81%B0%EC%88%98%EB%A7%8C%EB%93%A4%EA%B8%B0_%EC%9E%90%EB%B0%94/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "Python-Team-Notes for coding test",
        "excerpt":"No matter how many algorithmic problems you solve, anyone who prepares for coding tests will soon be forgotten and find out how they solved them in the past. I also felt that I had a lot of experience and spent a lot of time in this process, so I felt the need to organize it systematically, so I organized Python-Team-Notes for coding tests. I hope that sharing the contents will help those who are preparing for many coding tests üëç   Sorting by type by importance is as follows: Click on the link below to go to that post.      Implementation            Rotating-matrix-90-degrees       Changing base-notation(number-system)       Parsing skill           BFS&amp;DFS            BFS (Breadth-First Search)       DFS (Depth-First Search)           Binary Search   Dynamic Programming   Shorest Path   Graph Theory   Mathematics   The rest will soon be posted.   ","categories": ["PS"],
        "tags": ["Algorithm"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_Python_Team_Notes/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "Rotating-matrix-90-degrees with python",
        "excerpt":"Introduce method to rotate python matrix by 90-degrees without libraries. If you know the principles without additional libraries or complex code, you can easily solve them with simple python code. I hope you can acquire the following code by savoring it deeply.‚úçÔ∏è   def rotate_matrix_90_degrees(a):     # length of row     n = len(a)     # length of column     m = len(a[0]) \t\t     # array for storing result     result = [[0] * n for _ in range(m)] \t\t     # rotating element with rule     # if you couldn't under standing, drawing it on paper!     for i in range(n):         for j in range(m):             result[j][n-i-1] = a[i][j] \t\t     return result   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!  ","categories": ["PS"],
        "tags": ["Algorithm"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_Rotating-matrix-90-degrees/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "Changing base-notation(number-system) with python",
        "excerpt":"It‚Äôs simple to think a little bit about how to change number system, but it‚Äôs easy to get a head down when you encounter it in a real coding interview. That‚Äôs why we need to prepare this thoroughly. Let‚Äôs start with the code below!   # changing base-notation(number-system)  # 1. If base go beyond decimal (0 ~ infinity) def numeral_system(number, base):     # If base = 16? =&gt; NOTATION = '0123456789ABCDEF'     NOTATION = '012' # Incase of base = 3.      q, r = divmod(number, base)     n = NOTATION[r]     return numeral_system(q, base)+n if q else n     # 2. If inside decimal(10) while n:     tmp += str(n % 3) + tmp     n = n // base       # 3. When you change base to decimal int(tmp, 3)   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!  ","categories": ["PS"],
        "tags": ["Algorithm","Implementation"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_changing_number_system/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[ML] SRGAN one page summary",
        "excerpt":"1. Problem   As time goes by, the quantitative measurement like MSE, PSNR in single-image super-resolution is improved by the breakthrough of CNN based deep neural network. Even though It is still hard  to get finer texture details at large upscaled SR images. Because there are some limitations of earlier approaches. By presenting SRGAN, the authors try to solve its problem.      Figure 1: MSE loss tends to minimize loss by averaging of a possible solution. It hard to match finer texture details in existing CNN based network. But as seen in the figure, GAN generates one of possible solution distribution. It‚Äôs easy to get finer texture detail even in large- scaled SR images.   2. Solution   It is the main contribution of this paper to introduce the perceptual loss function with GAN.      Equation 1: It is the loss function of GAN. Both of the terms, that content loss, and adversarial loss use perceptual loss that is calculate loss with feature map extracted from VGG net, not a point pixel result value. By considering two-term at once, It can get an SR image that has finer texture detail.      Equation 2: Content loss used for preventing arbitrary generation result by calculating loss LR image from generator and HR image.      Equation3: It‚Äôs a common GAN loss. log(1-D) is original form, but usually it‚Äôs written -log(D). Because It is easy to train.      3. Result   Figure 2: Compare with the others, it seems like SRGAN  gives us a much sharp HR image that has a marginally high MOS value. Nonetheless, SRResNet has high PSNR and SSIM. The reason is that,  As  I  mark in the image,  GAN gives us a noise result that is not the same as the original image. It is one of the characteristics of GAN model. The reason is that learn the distribution of data, and generate a result. So, there is a hardship to constrain generation.   4. Opinion   The loss is a super important factor in model training. SRGAN uses perceptual loss. It means that the feature map extracted from the network is super important. What if using a more advanced network than VGG net?   All credit by Ledig et al., ‚ÄúPhoto-Realistic Single Image Super Resolution Using a Generative Adversarial Network‚Äù., CVPR 2017  ","categories": ["ML"],
        "tags": ["CV","GAN"],
        "url": "/ml/ML_SRGAN_Summary/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "Useful parsing skill with python",
        "excerpt":"In a real coding test, there are many difficulties in conditioning simple string processing. Python can use a variety of built-in functions and regular expressions for string data types as a basic built-in library, so with a few simple taps, you can use them very well.   Extract only the number of digits in a string into dictionary   number_cnt = Counter(re.findall('\\d+', string))   Change to All Alphabet Case   # Change to Lowercase string.lower()  # Change to uppercase string.upper()   Determine if a string consists only of alphabets or numbers   # Determine if it is made up of only alphabets \"abcd\".isalpha() # True \"ab2d\".isalpha() # False  # Determine if it consists only of numbers \"123\".isdigit() # True \"ab123\".isdigit() # False  # Determine if it consists only of alphabets or numbers \"123abc\".isalnum() # True \"123##ab\".isalnum() # False   regular expression examples   See the link below for full information. Only examples from real problems are summarized.   Well-organized documents   import re from collections import Counter  # Returns if non-alphabet characters are contained in it string = \"12 #abc# 123\" result = re.findall('[^a-zA-Z]+', string) print(result) # ['12 #', '# 123']  # Returns the number and number that appears in the string in dict form string = \"{{2},{2,1},{2,1,3},{2,1,3,4}}\" result = Counter(re.findall('\\d+', string)) print(result) # Counter({'2': 4, '1': 3, '3': 2, '4': 1})   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!  ","categories": ["PS"],
        "tags": ["Algorithm","Implementation"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_parsing_practice/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "BFS(Breadth-First Search) with python",
        "excerpt":"BFS&amp;DFS are probably one of the most frequent and important types of questions in various interviews and coding tests. I‚Äôve also encountered this type every time through several coding tests so far.   In this post, I would like to post about the BFS (Breadth-First Search) algorithm. I try to make it as simple as possible with Python, so I hope it helps a lot of people!üôè   BFS (Breadth-First Search) algorithm   from collections import deque   def bfs(graph, start, visited):     q = deque([start])     visited[start] = True     # 1. Basic     while q:         v = q.popleft()         for i in graph[v]:             if not visited[i]:                 q.append(i)                 visited[i] = True      # 2. Check by distance     dist = 0     while q:         dist += 1         # You can check the client by dist by hanging the for statement          # inside the while statement in this way.         for _ in range(len(q)):             x, y = q.popleft()             for i in range(4):                 nx, ny = x+dx[i], y+dy[i]                 if 0 &lt;= nx &lt; N and 0 &lt;= ny &lt; N and (visited[nx][ny] == False) and B[nx][ny] != 1:                     q.append((nx, ny))                     visited[nx][ny] = True                     if B[nx][ny] == -1:                         heapq.heappush(client_pq, (nx, ny, dist))   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!  ","categories": ["PS"],
        "tags": ["Algorithm","BFS"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_bfs/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "DFS(Depth-First Search) with python",
        "excerpt":"BFS&amp;DFS are probably one of the most frequent and important types of questions in various interviews and coding tests. I‚Äôve also encountered this type every time through several coding tests so far.   In this post, I would like to post about the DFS (Breadth-First Search) algorithm. I try to make it as simple as possible with Python, so I hope it helps a lot of people!üôè   DFS (Depth-First Search) algorithm   def dfs(graph, v, visited):     visited[v] = True      for i in graph[v]:         if not visited[v]:             dfs(graph, i, visited)   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!   ","categories": ["PS"],
        "tags": ["Algorithm","DFS"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_dfs/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "Binary Search with python",
        "excerpt":"Will be added!   Binary Search algorithm   def binary_search(array, target, start, end):     while start &lt;= end:         mid = (start+end)//2         if array[mid] == target:             return mid         elif array[mid] &gt;= target:             end = mid - 1         else:             start = mid + 1     return None   This post is part of Python-Team-Notes for coding test posting that I posted. If you have any questions or mistakes regarding the code, please point it out!   ","categories": ["PS"],
        "tags": ["Algorithm","DFS"],
        "url": "/ps/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98_binary_search/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Think] Ïôú Ïö∞Î¶∞ Íæ∏Ï§ÄÌïòÍ≤å Î∏îÎ°úÍ∑∏Î•º Ìï† Ïàò ÏóÜÎäîÍ±∏Íπå?",
        "excerpt":"ÌèâÏÜå ÌÜ†ÎπÑÎãòÏùò Ïú†ÌäúÎ∏åÎ•º Ïù¥ÎèôÌïòÎ©∞ Ìï≠ÏÉÅ Îì£Í≥† ÏûàÎäîÎç∞Ïöî, Í∑∏ Ï§ë Î∞±Í∏∞ÏÑ† ÎãòÏù¥ Í≤åÏä§Ìä∏Î°ú ÎÇòÏò§Ïã† Ìé∏ÏóêÏÑú Í∏∞ÏÑ† ÎãòÏù¥ Ìï¥Ï£ºÏã† ÎßêÏîÄÏù¥ ÌÅ¨Í≤å Í≥µÍ∞êÏù¥ ÎêòÏóàÏäµÎãàÎã§.   ‚ÄúÏ≤òÏùåÏóêÎäî ÎàÑÍ∞Ä Î≥¥Í≤†Ïñ¥~ÎùºÎäî ÏÉùÍ∞ÅÏúºÎ°ú Í∑∏ÎÉ• Íæ∏Ï§ÄÌïòÍ≤å Í≥µÎ∂ÄÌïú ÎÇ¥Ïö©ÏùÑ Ïò¨Î¶¥ ÎïåÎäî Íæ∏Ï§ÄÌïòÍ≤å Î∏îÎ°úÍ∑∏Î•º Ìï† Ïàò ÏûàÏóàÎäîÎç∞(Ïã§Ï†úÎ°ú Ìè¨Ïä§ÌåÖÏù¥ 3000Í±¥ Ïù¥ÏÉÅ‚Ä¶.), Ï†ú Î∏îÎ°úÍ∑∏Î•º Î≥¥Îäî ÏÇ¨ÎûåÏù¥ ÎßéÏïÑÏßÄÎ©∞ ÎÇòÎßå ÏïÑÎäî ÏÉàÎ°úÏö¥ Í≤ÉÏùÑ Ïç®Ïïº ÌïúÎã§Îäî Î∂ÄÎã¥Í∞êÏù¥ Îì§Î©¥ÏÑú Î∏îÎ°úÍ∑∏ Í∏ÄÏùÑ Ïïà Ïì∞Í∏∞ ÏãúÏûëÌïú Í≤É Í∞ôÏïÑÏöî.‚Äù   Ïù¥ Ïù¥ÏïºÍ∏∞Î•º Îì£Í≥† Ï†Ä ÎòêÌïú ‚ÄòÎÇ¥Í∞Ä Ïôú Íæ∏Ï§ÄÌïòÍ≤å Î∏îÎ°úÍ∑∏Î•º ÌïòÏßÄ Î™ªÌñàÏùÑÍπå‚ÄôÎ•º ÎèåÏù¥Ïºú Î≥¥Î©∞ ÎÑàÎ¨¥ ÏûòÌïòÎ†§Í≥† ÌñàÎçò Í≤ÉÏù¥ ÏõêÏù∏Ïù¥ÎùºÎäî ÏÉùÍ∞ÅÏù¥ Îì§ÏóàÏäµÎãàÎã§.   Í∞Å?ÏùÑ Ïû°Í≥† Ï¢ãÏùÄ Í∏ÄÏùÑ Ïç®ÏÑú ÏÇ¨ÎûåÎì§ÏóêÍ≤å Ïì∏Î™®ÏûàÎäî Í∏ÄÏùÑ Ïç®Ïïº ÌïúÎã§Îäî ÏÉùÍ∞ÅÏóê ÏóÑÏ≤≠ Ïó¨Ïú†Í∞Ä ÏûàÎäî ÎÇ†Ïù¥ ÏïÑÎãàÎ©¥ ÏïÑÏòà Ïì∞ÏßÄ ÏïäÍ±∞ÎÇò, Ïç®ÎèÑ Í∏∞Ï°¥Ïóê Ïù¥ÎØ∏ ÏûëÏÑ±Ìï¥Î≥∏ ÏïåÍ≥†Î¶¨Ï¶ò ÏΩîÎìúÎ•º Îã®Ïàú Ìè¨Ïä§ÌåÖÌïòÎäî ÏàòÏ§ÄÏùò Í∏ÄÎì§ÏùÑ Ïò¨Î¶¨Í∏∞ Í∏âÍ∏âÌñàÎçò Í≤ÉÏùÄ ÏïÑÎãêÍπå? ÎùºÎäî ÏÉùÍ∞ÅÏù¥ Îì≠ÎãàÎã§.   Better Late Than NeverÎùºÎäî ÏòÅÏñ¥ÏÜçÎã¥Í≥º Í∞ôÏù¥ Îä¶Í≤åÎùºÎèÑ ÌïòÎäî Í≤ÉÏù¥ Ïïà ÌïòÎäî Í≤ÉÎ≥¥Îã§ ÎÇ´Í∏∞Ïóê ÏïûÏúºÎ°úÎäî Ïûò Ïç®ÏïºÍ≤†Îã§Îäî ÏÉùÍ∞ÅÏùÑ Î≤ÑÎ¶¨Í≥† ÎåÄÎã®Ìïú Í∏ÄÏù¥ ÏïÑÎãàÎçîÎùºÎèÑ Í≥µÎ∂ÄÌïòÍ≥† Î∞∞Ïö¥ Í≤ÉÏùÑ Íæ∏Ï§ÄÌïòÍ≤å Î∏îÎ°úÍ∑∏ Í∏ÄÎ°ú Ïì∞Í≤†Îã§Í≥† Îã§ÏßêÌï¥Î¥ÖÎãàÎã§.     ÏúÑ ÎÇ¥Ïö© Í¥ÄÎ†®ÌïòÏó¨ ÎßéÏù¥ Í≥µÍ∞êÎêòÎäî ÎÇ¥Ïö©Ïùò Ïú†ÌäúÎ∏å ÏòÅÏÉÅÏù¥ ÏûàÏñ¥ Í≥µÏú†Ìï©ÎãàÎã§  ","categories": ["Think"],
        "tags": ["Korean","ÏÉùÍ∞ÅÏ†ïÎ¶¨"],
        "url": "/think/%EC%99%9C_%EC%9A%B0%EB%A6%AC%EB%8A%94_%EA%BE%B8%EC%A4%80%ED%95%98%EA%B2%8C_%EB%B8%94%EB%A1%9C%EA%B7%B8%EB%A5%BC_%ED%95%A0%EC%88%98%EC%97%86%EB%8A%94%EA%B1%B8%EA%B9%8C/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Spring] Response jsonÏóêÏÑú booleanÏùò isÍ∞Ä ÏÉùÎûµÎêòÎäî Î¨∏Ï†ú",
        "excerpt":"Î¨∏Ï†ú   Spring BootÏóêÏÑú DtoÎ°ú ResponseÎ•º Î∞òÌôò Ïãú primitive boolean typeÏùò Î≥ÄÏàòÏùò Î≥ÄÏàòÎ™ÖÏù¥ is~Î°ú ÏãúÏûëÌïòÎ©¥ isÍ∞Ä ÏÉùÎûµÎêòÎäî Ïû¨ÎØ∏ÏûàÎäî? Î¨∏Ï†úÍ∞Ä ÏûàÏóàÏäµÎãàÎã§. Spring BootÏóêÏÑúÎäî Response Ïãú ÏûêÎ∞î Í∞ùÏ≤¥Î•º  jackson libraryÎ•º Ïù¥Ïö©ÌïòÏó¨ jsonÏúºÎ°ú Îß§ÌïëÌïòÏó¨ Î∞òÌôòÌïòÍ∏∞ ÎïåÎ¨∏Ïóê Ï†ïÌôïÌûàÎäî jacksonÏùò ÌäπÏßïÏùº Í≤É ÏûÖÎãàÎã§.      Ìï¥Í≤∞   Íµ¨Í∏ÄÎßÅ Í≤∞Í≥º JsonProperty annotationÏùÑ Ïù¥Ïö©ÌïòÏó¨ json Îß§Ìïë Îê† key Í∞íÏùÑ Í∞ïÏ†úÏßÄÏ†ï Ìï¥Ï£ºÎ©¥ ÎêúÎã§Í≥† ÌïòÏó¨ ÏãúÎèÑÌï¥Î≥¥ÏïòÏäµÎãàÎã§.   Í∑∏ Í≤∞Í≥º JsonProperty Í∞íÍ≥º ÏõêÎûò Î≥ÄÏàò Í∞íÏù¥ Î™®Îëê Ï∂úÎ†•ÎêòÎäî ÎçîÏö± ÎÜÄÎùºÏö¥ Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌïòÏòÄÏäµÎãàÎã§‚Ä¶.„Öé      Ïù¥ÌõÑ Í∞ÑÎã®Ìûà Wrapper typeÏùÑ Ïù¥Ïö©ÌïòÏó¨ primitive typeÏùò booleanÏùÑ Boolean Class typeÏúºÎ°ú ÏàòÏ†ïÌï®ÏúºÎ°úÏÑú Î¨∏Ï†úÎ•º Ìï¥Í≤∞Ìï† Ïàò ÏûàÏóàÏäµÎãàÎã§.      ÎåÄÎã®Ìïú Î¨∏Ï†úÎäî ÏïÑÎãàÏßÄÎßå Ï≤òÏùå ÎßàÏ£ºÏπòÎ©¥ Î≤ÑÍ∑∏Î•º Ïû°Í∏∞ ÌûòÎì†? Ïû¨ÎØ∏ÏûàÎäî Î¨∏Ï†úÏù∏ Í≤É Í∞ôÏïÑ Í≥µÏú†ÌïòÍ≤å ÎêòÏóàÏäµÎãàÎã§.  ","categories": ["Dev"],
        "tags": ["Troubleshooting","Spring","Jackson"],
        "url": "/dev/Spring_Jackson_is_%EC%83%9D%EB%9E%B5%EB%AC%B8%EC%A0%9C/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Think] ÎßêÏù¥ ÌÜµÌïòÎäî Í∞úÎ∞úÏûêÎêòÍ∏∞",
        "excerpt":"   ÏßÄÍ∏àÍπåÏßÄ Ïó¨Îü¨ IT (web/app) ÌîÑÎ°úÏ†ùÌä∏Î•º ÌïòÎ©¥ÏÑú _‚ÄúÏÉÅÎåÄÎ∞©ÏùÄ Ïôú ÎÇ¥ÎßàÏùåÏùÑ Î™∞ÎùºÏ§ÑÍπåÏöî?‚Äù_ÎùºÎäî ÎßêÏù¥ ÎπÑÎã® Ïó∞Ïï†ÏóêÏÑúÎßå ÏÇ¨Ïö©ÎêòÎäî Í≤ÉÏùÄ ÏïÑÎãàÎùºÎäî Í≤ÉÏùÑ ÏïåÍ≤åÎêòÏóàÏäµÎãàÎã§‚Ä¶. :(   Í∞ôÏùÄ ÌïúÍµ≠Ïñ¥Î°ú ÏùòÏÇ¨ÏÜåÌÜµÏùÑ Ìï®ÏóêÎèÑ Î∂àÍµ¨ÌïòÍ≥† ÏßÅÍµ∞Í≥º ÏßÅÍµ∞ ÎÅºÎ¶¨ (Í∞úÎ∞úÏûê &lt;=&gt; Í∏∞ÌöçÏûê, ÌîÑÎ°†Ìä∏ &lt;=&gt; Î∞±ÏóîÎìú Îì±), Í∞ôÏùÄ ÏßÅÍµ∞ÎÅºÎ¶¨ÎèÑ Ï†ïÎßê ÏÜåÌÜµÏù¥ ÏûòÎêòÏßÄ ÏïäÎäî Í≤ΩÌóòÏùÑ ÎßéÏù¥ ÌñàÏäµÎãàÎã§. ÌäπÌûà ÏöîÏ¶òÍ∞ôÏùÄ ÏΩîÎ°úÎÇò ÏãúÍµ≠ÏóêÏÑúÎäî ÏõêÍ≤©ÏúºÎ°ú ÏùºÏùÑ ÌïòÎäî Í≤ΩÏö∞Í∞Ä ÎßéÏïòÍ∏∞ ÎïåÎ¨∏Ïóê ÎçîÏö± ÌÅ¨Í≤å ÏôÄ ÎãøÎäî Í≤É Í∞ôÏäµÎãàÎã§.   Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖò Îä•Î†•ÏùÄ ITÏßÅÍµ∞ÏóêÏÑúÎäî ÌäπÌûà Ï§ëÏöîÌïòÎã§Í≥† ÏÉùÍ∞ÅÌï©ÎãàÎã§. ÌïòÎÇòÏùò Ïï±/ÏõπÏùÑ Ï∂úÏãúÌïòÎ†§Í≥†Îßå ÌïòÎçîÎùºÎèÑ Í∏∞ÌöçÏûê, ÎßàÏºÄÌÑ∞, ÎîîÏûêÏù¥ÎÑà, ÌîÑÎ°†Ìä∏, Î∞±Ïï§Îìú Í∞úÎ∞úÏûê Îì±Îì± Ïàò ÎßéÏùÄ Î∂ÑÎì§Ïùò ÌòëÏóÖÏùÑ ÌÜµÌï¥ Ïù¥Î£®Ïñ¥ÏßÄÍ∏∞ ÎïåÎ¨∏ÏûÖÎãàÎã§.   Ïù¥Î≤à Í∏ÄÏóêÏÑúÎäî ÏßÄÍ∏àÍπåÏßÄ ÏùºÌïòÎ©∞ ÎäêÍª¥Ïò® Í≥†ÏßàÏ†ÅÏù∏ Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖò Î¨∏Ï†úÏú†ÌòïÍ≥º Î∞îÎûåÏßÅÌïú ÌòëÏóÖÎ∞©ÏãùÏóê ÎåÄÌïòÏó¨ Ï†ÅÏñ¥Î≥¥ÎèÑÎ°ùÌïòÍ≤†ÏäµÎãàÎã§.   Î¨∏Ï†úÏ†ê 1. Ïû†ÏàòÌï® Ïª§ÎÆ§ÎãàÏºÄÏù¥ÏÖò   ÏùºÏùÑ Ï†ïÌïòÍ≥† Ïù¥ÌõÑ Îã§Ïãú Î¨ºÏñ¥Î≥¥Í∏∞ Ï†ÑÍπåÏßÄÎäî Í∑∏ Ïñ¥Îñ†Ìïú Î≥ÄÎèôÏÇ¨Ìï≠ÎèÑ ÎßêÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞ ÏûÖÎãàÎã§. Í∞ÄÏû• ÌùîÌïú Ïú†ÌòïÏù¥ ÏïÑÎãêÍπå ÏÉùÍ∞ÅÎêòÎäîÎç∞Ïöî.   ÏòàÎ•º Îì§Ïñ¥ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÌôòÍ≤ΩÏùÑ Íµ¨Ï∂ïÌïòÎäî ÏóÖÎ¨¥Î•º ÎÇ¥Ïùº ÏûêÏ†ïÍπåÏßÄ ÎÅùÎÇ¥Í∏∞Î°ú Ìïú Í≤ΩÏö∞, Î¨∏Ï†úÍ∞Ä ÏÉùÍ≤® Í∑∏ÎïåÍπåÏßÄ ÏùºÏùÑ ÎÅùÎÇ¥Í∏∞ Ïñ¥Î†µÍ±∞ÎÇò Íµ¨ÌòÑÏóê Î≥ÄÎèôÏÇ¨Ìï≠Ïù¥ ÏÉùÍ≤ºÏùåÏóêÎèÑ Îã§Ïùå ÎÖºÏùò ÎïåÍπåÏßÄ ÌòπÏùÄ Î¨ºÏñ¥Î≥¥Í∏∞ Ï†ÑÍπåÏßÄ ÎßêÌïòÏßÄ ÏïäÍ≥† Ïû†ÏàòÌï® Ï≤òÎüº ÌòºÏûêÎßåÏùò ÎπÑÎ∞ÄÎ°ú? Í∞ÑÏßÅÌïòÎäî Í≤ΩÏö∞Î•º ÏûêÏ£º Î≥¥ÏïòÏäµÎãàÎã§.   Ïù¥Îü¥ Í≤ΩÏö∞ Í¥ÄÎ†® ÏùºÏ†ï, Î∞è Íµ¨ÌòÑ ÎòêÌïú Î™®Îëê Î≥ÄÍ≤ΩÎêòÏñ¥ÏïºÌï¥ÏÑú Ïù¥Ìï¥Í¥ÄÍ≥ÑÏûêÍ∞Ä Î™®ÎëêÏùò Ìï©ÏùòÍ∞Ä ÌïÑÏöîÌïúÎç∞Ïöî. ÎßàÍ∞êÍ∏∞ÌïúÏù¥ Îã§ÎêòÏñ¥ÏÑúÏïº ÏóÖÎ¨¥Í∞Ä Îã§ ÎÅùÎÇòÏßÄ ÏïäÏïòÍ≥†, Î™ÖÏÑ∏ ÎòêÌïú Î∞îÎÄåÏñ¥ ÏûàÎã§Îäî Í≤ÉÏùÑ ÏïåÏïòÎã§Î©¥ Ïñ¥Îñ®ÍπåÏöî‚Ä¶.? Í∞ÑÎã¥Ïù¥ ÏÑúÎäòÌï¥ÏßÄÎäî ÏùºÏù¥ ÏïÑÎãê Ïàò ÏóÜÏäµÎãàÎã§.   Î¨∏Ï†úÏ†ê 2. ÏßàÎ¨∏ÌïòÏßÄ ÏïäÎäî ÌïúÍµ≠Ïù∏      ‚ÄòÏßàÎ¨∏ÌïòÏßÄ ÏïäÎäî ÌïúÍµ≠Ïù∏‚Äô ÏùµÌûà Ïö∞Î¶¨Í∞Ä ÏïåÍ≥† ÏûàÎäî Î¨∏Ï†úÎ°ú Ïö∞Î¶¨ÎÇòÎùº ÍµêÏú°Ïùò ÌäπÏÑ±ÏÉÅ Ïö∞Î¶¨Îäî ÏßàÎ¨∏ÏùÑ ÏûÉÏñ¥Î≤ÑÎ¶∞ ÏÇ¨ÌöåÏóêÏÑú ÏÇ¥ÏïÑ ÏôîÏäµÎãàÎã§.   ÌòëÏóÖÏóê ÏûàÏñ¥ÏÑúÎèÑ Ïù¥Îü¨Ìïú Í≤ΩÏö∞Î•º ÎßéÏù¥ Î≥¥ÏïòÏäµÎãàÎã§. ÏòàÎ•º Îì§Ïñ¥ Ìï¥Ïª§ÌÜ§Ïóê Ï∞∏Ïó¨Ìï¥ÏÑú Îã§Î•∏ Î∂ÑÏóêÍ≤å AÎùºÎäî ÏóÖÎ¨¥Î•º Î∂ÄÌÉÅÌñàÏùÑ Îïå, Î™®Î•¥Îäî Í≤ÉÏùÑ Î™®Î•∏Îã§Í≥† ÌïòÏßÄ ÏïäÍ≥† ÎÅùÍπåÏßÄ ÌòºÏûêÌïòÎ†§Í≥† ÌïòÎã§Í∞Ä Í≤∞Íµ≠ ÌåÄ Ï†ÑÏ≤¥Í∞Ä ÌîÑÎ°úÏ†ùÌä∏Î•º ÏôÑÏàòÌïòÎäî Í≤ÉÏóê Ïã§Ìå®ÌïòÍ≤å ÎêòÎäî Í≤ΩÏö∞ ÏûÖÎãàÎã§.   Í∞ÅÏûê ÏûêÏã†Ïùò ÎßûÏùÄ Ïùº ÎòêÌïú Î≤ÖÏ∞®Í∏∞Ïóê Îã§Î•∏ ÌåÄÏõêÏóêÍ≤å Î®ºÏ†Ä Îã§Í∞ÄÍ∞Ä ‚ÄúÎ≠ê ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?‚Äù ÎùºÎäî ÎßêÏùÑ ÌïòÍ∏∞ ÏâΩÏßÄ ÏïäÏùÄ ÏÉÅÌô©Ïù¥ ÏûêÏ£º ÏûàÎã§ ÏÉùÍ∞ÅÌïòÎäîÎç∞Ïöî.   Ïù¥Îü∞ Í≤ΩÏö∞ Ï¥àÎ≥¥Ïûê Î∂ÑÎì§ÏùÄ Î≥∏Ïù∏Ïù¥ Ìï† Ïàò ÏûàÎäîÎç∞ÍπåÏßÄ ÏµúÏÑ†ÏùÑ Îã§Ìï¥ÏÑú Ìï¥Î≥¥Í≥†, ‚ÄúAÍ∞Ä Î¨∏Ï†úÎùº ÏïåÏïÑÎ≥¥ÏïòÍ≥† Í∑∏ Í≤∞Í≥º B, C, D ÍπåÏßÄ Ìï¥Î≥¥ÏïòÏúºÎÇò Î¨∏Ï†úÎ•º Ìï¥Í≤∞ÌïòÏßÄ Î™ªÌñàÏäµÎãàÎã§. Îã§ÏùåÏúºÎ°ú FÎ•º Í≥†Î†§ÌïòÍ≥† ÏûàÎäîÎç∞ Ïñ¥ÎñªÍ≤å ÏÉùÍ∞ÅÌïòÏãúÎÇòÏöî?‚ÄùÎùºÍ≥† Î≥∏Ïù∏Ïù¥ ÏßÄÍ∏àÍπåÏßÄ Í≥†ÎØºÌïú Í≤ÉÏùÑ Ï°∞Î¶¨ÏûàÍ≤å Ï†ïÎ¶¨ÌïòÏó¨ Ï°∞Í∏à Îçî Ïã§Î†•Ïù¥ ÏûàÏúºÏã† Î∂ÑÏóêÍ≤å Î¨ºÏñ¥ Î≥∏Îã§Î©¥ Î≥∏Ïù∏Ïùò ÏÑ±Ïû•ÏóêÎèÑ, ÌåÄÏùò Î∞úÏ†ÑÏóêÎèÑ Î™®Îëê Ï¢ãÏùÄ ÏùºÏù¥ ÏïÑÎãêÍπå Ìï©ÎãàÎã§.   Í¥ÄÎ†®ÌïòÏó¨ Ïñ¥Îñ§ ÏãúÎãàÏñ¥ Î∂ÑÏùò ÎßêÏîÄÏù¥ Ïù∏ÏÉÅ ÍπäÏóàÎäîÎç∞Ïöî. ‚ÄúÏã†ÏûÖÏùÄ Ïñ¥Îñ§ ÏùºÏùÑ Ìï¥ÏïºÌïòÎÇòÏöî?‚Äù ÎùºÎäî ÏßàÎ¨∏Ïóê ‚ÄúÏã†ÏûÖÏùÄ ÏßàÎ¨∏ÌïòÎäî Í≤ÉÏù¥ Ï£ºÎêú ÏóÖÎ¨¥ÎùºÍ≥† ÏÉùÍ∞ÅÌï©ÎãàÎã§.‚ÄùÎùºÍ≥† ÎãµÎ≥ÄÌï¥Ï£ºÏÖ®Îçò Í≤ÉÏù¥ Í∏∞ÏñµÏóê ÎÇ®ÏäµÎãàÎã§.   Î¨∏Ï†úÏ†ê 3. Ïú†ÏïÑÎèÖÏ°¥      Î≥∏Ïù∏Ïù¥ ÌòëÏóÖÌïòÍ∏∞ Í∞ÄÏû• ÌûòÎì† Ïú†ÌòïÏù¥ ÏïÑÎãêÍπå ÏÉùÍ∞ÅÌïòÎäîÎç∞Ïöî‚Ä¶ ÏÑ§ÎìùÎê† Ï§ÄÎπÑÍ∞Ä ÎêòÏßÄ ÏïäÏùÄ Î∂ÑÍ≥º ÌÜ†ÏùòÎ•º ÌïòÎäî Í≤É ÎßåÌÅº Í≥†ÌÜµÏä§Îü¨Ïö¥ Í≤ÉÏù¥ ÏóÜÎäî Í≤É Í∞ôÏäµÎãàÎã§.   ÏòàÎ•º Îì§Ïñ¥ Java ÌîÑÎ°úÏ†ùÌä∏Ïóê JPA ORMÏùÑ ÎèÑÏûÖÌïòÎäî ÏïàÍ±¥Ïù¥ ÎÇòÏôîÎã§Í≥†ÌïòÎ©¥ JPA ÌäúÎãùÌïòÍ∏∞ ÌûòÎì†Îç∞ Î≠êÌïòÎü¨ Í∑∏Îü∞ Í≤ÉÏùÑ Ïì∞ÎÇòÏöî? MyBatisÎ•º Ïôú ÏïàÏì∞ÏãúÎÇòÏöî? (ÏñºÎßàÏ†ÑÏóê Îì§ÏùÄ Ïù¥ÏïºÍ∏∞‚Ä¶.) ÎùºÎäî Îì±‚Ä¶ Î≥∏Ïù∏ÎßåÏùò ÌôïÍ≥†Ìïú ÏùòÍ≤¨Ïù¥ ÏûàÏñ¥ Ïù¥ÏïºÍ∏∞Î•º Îì§ÏùÑ Ï§ÄÎπÑÍ∞Ä ÎêòÏßÄ ÏïäÏùÄ Î∂ÑÎì§ Ï¢ÖÏ¢Ö Î≥¥Í≥§Ìï©ÎãàÎã§.   ÏúÑ ÏòàÏãúÏóêÏÑú jpaÍ∞Ä Î¨¥Ï°∞Í±¥ Ï¢ãÎã§ÎùºÍ∏∞ Î≥¥Îã§ÎèÑ, ‚ÄòAÎäî Ïò≥Í≥† BÎäî ÏïÑÎãàÏïº‚Äô ÎùºÎäî Îã®Ïñ∏Ï†ÅÏù∏ ÌÉúÎèÑÎäî ÌåÄ Ï†ÑÏ≤¥Ïóê ÎèÑÏõÄÏù¥ ÎêòÏßÄ ÏïäÎäîÎã§Í≥† ÏÉùÍ∞ÅÌï©ÎãàÎã§.   Ïù¥ÎèôÏö± ÎãòÍªòÏÑú ÏÑ∏ÎØ∏ÎÇòÏóêÏÑú ÎßêÏîÄÌï¥Ï£ºÏÖ®Îçò Í≤ÉÍ≥º Í∞ôÏù¥ ‚ÄúÏÑ§Îìù ÎãπÌï† Ïàò ÏûàÎäî ÏãúÎãàÏñ¥, ÏÑ§ÎìùÌï† Ïàò ÏûàÎäî Ï£ºÎãàÏñ¥‚ÄùÍ∞Ä ÎêòÍ∏∞ ÏúÑÌï¥ Ïö∞Î¶¨ Î™®Îëê ÎÖ∏Î†•ÌïòÎäî Í≤ÉÏùÄ Ïñ¥Îñ®ÍπåÏöî?   Ìï¥Í≤∞Ï±Ö. Îã§Î•∏ ÏÇ¨ÎûåÏù¥ ÎÇ¥ ÏÉÅÌô©ÏùÑ 1ÎèÑ Î™®Î•∏Îã§.      Ï†úÍ∞Ä ÏÉùÍ∞ÅÌïòÍ∏∞Ïóê ÏúÑÏôÄ Í∞ôÏùÄ Î¨∏Ï†úÎ•º Ìï¥Í≤∞Ìï† Ïàò ÏûàÎäî Í∞ÄÏû• Ï¢ãÏùÄ Î∞©Î≤ïÏùÄ ‚ÄúÎã§Î•∏ ÏÇ¨ÎûåÏùÄ ÎÇòÏóê ÎåÄÌïòÏó¨ 1ÎèÑ Î™®Î•∏Îã§.‚ÄùÎùºÎäî Í≤ÉÏùÑ Í∏∞Î≥∏ Í≥µÎ¶¨Î°ú Í∞ÄÏßÄÍ≥† ÏÜåÌÜµÌïòÎäî Í≤ÉÏûÖÎãàÎã§.   Í∞ôÏùÄ ÌåÄÏóêÏÑú ÏóÖÎ¨¥Î•º ÌïòÎçîÎùºÎèÑ ÏÉùÍ∞ÅÎ≥¥Îã§ Îã§Î•∏ ÌåÄÏõêÎì§ÏóêÍ≤å Í¥ÄÏã¨Ïù¥ ÏóÜÎäî Í≤ΩÏö∞Í∞Ä ÎßéÏäµÎãàÎã§.  Î≥∏Ïù∏ ÏóÖÎ¨¥ÎèÑ ÌïòÍ∏∞ Î∞îÏÅòÍ∏∞ ÎïåÎ¨∏Ïù¥Í≤†ÏßÄÏöî.   Î∞∞ÎØºÏùò Í≤ΩÏö∞ ‚Äò4. Ïû°Îã¥ÏùÑ ÎßéÏù¥ ÎÇòÎàÑÎäî Í≤ÉÏù¥ Í≤ΩÏüÅÎ†•Ïù¥Îã§.‚ÄôÎùºÍ≥† ÏùºÏûòÌïòÎäî Î≤ïÏóê Î™ÖÏãúÌï¥ ÎÜìÏùÄ Í≤ÉÏ≤òÎüº ÌÉÄÏù∏Ïóê ÎåÄÌïú Í¥ÄÏã¨ÏùÑ Î∞îÌÉïÏúºÎ°ú ÏÜåÌÜµÏùÑ Ïû•Î†§ÌïòÍ≥† ÏûàÏäµÎãàÎã§. Ïù¥Í≤ÉÏù¥ Ï†ïÎßêÎ°ú Ïû°Îã¥ÏùÑ Ìï¥Îùº ÎùºÎäî Îßê Î≥¥Îã§Îäî Î≥∏Ïù∏Ïù¥ Ï≤òÌïú ÏÉÅÌô©(Context)Î•º ÏµúÎåÄÌïú ÎèôÎ£åÎì§ÏóêÍ≤å ÎßéÏù¥ Ï†ÑÎã¨ÌïòÎùºÎäî ÎúªÏúºÎ°ú Ï†ÄÎäî Ïù¥Ìï¥ÌïòÏòÄÎäîÎç∞Ïöî.   Ï†Ä ÎòêÌïú ÌòëÏóÖÏãú ÏµúÎåÄÌïú Ï†ÄÏùò ÏóÖÎ¨¥Ï†Å, ÏÉÅÌô©Ï†Å Ï†ïÎ≥¥Î•º ÏßúÏûòÌïòÍ≤åÎùºÎèÑ ÎßéÏù¥ Ï†ÑÎã¨ÌïòÍ∏∞ ÏúÑÌï¥ ÎÖ∏Î†•ÌïòÍ≥† ÏûàÏäµÎãàÎã§. Í∑∏ Í≤∞Í≥º ÌåÄÏõêÍ≥º Ï†Ä ÏÇ¨Ïù¥Ïùò ÏÇ¨Ï†ÑÏ†ïÎ≥¥ Î∂àÏùºÏπòÎ°ú Ïù∏Ìïú Comunication costÍ∞Ä ÎÇÆÏïÑÏßÄÎäî Í≤ΩÌóòÏùÑ Ìï† Ïàò ÏûàÏóàÏäµÎãàÎã§.   ÎßàÏßÄÎßâÏúºÎ°ú Ï†ïÎ¶¨ÌïòÎ©¥ Í∏∞Î≥∏ÏúºÎ°ú ÌÉÄÏù∏ÏùÄ ÎÇ¥Í∞Ä ÌïòÎäî ÏùºÏóê ÎåÄÌïòÏó¨ ÏïÑÎ¨¥Í≤ÉÎèÑ Î™®Î•¥Í≥† ÏûàÎã§Í≥† Í∞ÄÏ†ïÌïòÍ≥† ÎåÄÌôîÎ•º ÌïúÎã§Î©¥ Ìú†Ïî¨ Îçî Ìö®Ïú®Ï†ÅÏù∏, ‚ÄòÎßêÏù¥ ÌÜµÌïòÎäî Í∞úÎ∞úÏûê‚ÄôÍ∞Ä Îê† Ïàò ÏûàÏßÄ ÏïäÏùÑÍπå ÏÉùÍ∞ÅÌï©ÎãàÎã§.   ","categories": ["Think"],
        "tags": ["Work","Korean","ÏÉùÍ∞ÅÏ†ïÎ¶¨"],
        "url": "/think/Dev_%EB%A7%90%EC%9D%B4_%ED%86%B5%ED%95%98%EB%8A%94_%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%90%98%EA%B8%B0/",
        "teaser": "/assets/images/teaser.png"
      },{
        "title": "[Dev] Í∞ùÏ≤¥ÏßÄÌñ• ÏÉùÌôúÏ≤¥Ï°∞ ÏõêÏπô",
        "excerpt":"ÎßûÏ∂§Î∂ÑÏñëÌïÑÌÑ∞(Android  iOS)ÎùºÎäî Ïï±ÏóêÏÑú Î∞±ÏóîÎìú ÌååÌä∏Î•º Îã¥ÎãπÌïòÏó¨ ÏûêÎ∞î, Ïä§ÌîÑÎßÅ Î∂ÄÌä∏ Í∏∞Î∞òÏúºÎ°ú Ï∂úÏãúÌïòÏó¨ Ïö¥ÏòÅÏ§ëÏûÖÎãàÎã§.   Ïã†ÏÉù Ïï±Ïù¥Îã§ Î≥¥Îãà Í≤¨Í≥†Ìïú ÏΩîÎìú Î≥¥Îã§Îäî Í∏∞Îä•Íµ¨ÌòÑ Ï§ëÏã¨ÏúºÎ°ú ÏùºÎã® ÎèåÏïÑÍ∞ÄÍ≤å ÌïòÏûê!ÎùºÎäî ÏÉùÍ∞ÅÏúºÎ°ú Îπ†Î•¥Í≤å ÏΩîÎìúÎ•º ÏßúÍ≥† Î∞∞Ìè¨ÌïòÎäî Í≤ÉÏùÑ Î∞òÎ≥µÌïòÍ≥† ÏûàÏäµÎãàÎã§.   Ïù¥ÌõÑ Ïù¥Í≤ÉÎì§Ïù¥ ÌÅ∞ Î∂ÄÎß§ÎûëÏúºÎ°ú ÎèåÏïÑÏò¨ ÎïåÍ∞Ä ÎßéÏù¥ ÏûàÏóàÏäµÎãàÎã§. ÏòàÎ•º Îì§Ïñ¥ Ïô∏Î∂Ä APIÎ•º ÏÇ¨Ïö©ÌïòÎäî Î∂ÄÎ∂ÑÏóêÏÑúÏùò Ïû•Ïï†Í∞Ä ÏÑúÎπÑÏä§Î°ú Ïû•Ïï†Ï†ÑÌååÍ∞Ä ÎêòÎäî Í≤ΩÏö∞, Ïù¥ÌõÑ Î≤ÑÍ∑∏Î¶¨Ìè¨ÌåÖÏù¥ Îì§Ïñ¥ÏôÄ Î°úÏßÅÏùÑ ÏàòÏ†ïÌï¥ÏïºÌïòÎäî Í≤ΩÏö∞, Ïù¥ÌõÑ Îã§Ïãú ÏΩîÎìúÎ•º Î¥§ÏùÑÎïå ÌïúÎààÏóê Îì§Ïñ¥Ïò§ÏßÄ ÏïäÎäî Îì±‚Ä¶   ÏúÑÏôÄ Í∞ôÏùÄ Í≤ΩÌóòÏùÑ ÌïòÎ©∞ Ï¢ãÏùÄ ÏΩîÎìúÎûÄ Î¨¥ÏóáÏùºÍπå? Ïñ¥ÎñªÍ≤åÌïòÎ©¥ Ïú†ÏßÄÎ≥¥Ïàò ÌïòÍ∏∞ ÏâΩÍ≥†,  _Ïù¥ÌõÑÏóê ÌåÄÏõêÏù¥ Îì§Ïñ¥Ïò§ÎçîÎùºÎèÑ Ïù¥Ìï¥ÌïòÍ∏∞ Ïâ¨Ïö¥ ÏΩîÎìú_Î•º ÎßåÎì§ Ïàò ÏûàÏùÑÍπå?ÎùºÎäî ÏÉùÍ∞ÅÏùÑ ÌïòÎ©∞ Ïù¥Îü∞Ï†ÄÎü∞ ÏûêÎ£åÎ•º Ï∞æÎçò Ï§ë!   Ïö∞ÏïÑÌïúÌÖåÌÅ¨ÏÑ∏ÎØ∏ÎÇò Î∞ïÏû¨ÏÑ±(Ìè¨ÎπÑ)ÎãòÏùò TDD Î¶¨Ìå©ÌÜ†ÎßÅ Í∞ïÏùòÎ•º ÍµâÏû•Ìûà Ïù∏ÏÉÅ ÍπäÍ≤å Î≥¥ÏïòÍ≥†, Í∞ïÏùò Ï§ë Í∞ùÏ≤¥ÏßÄÌñ• ÏÉùÌôúÏ≤¥Ï°∞ ÏõêÏπô(Î¶¨ÌéôÌÜ†ÎßÅ ÏõêÏπô) Î∂ÄÎ∂ÑÏóê ÎåÄÌïòÏó¨ Ïù¥ÌõÑ ÎëêÍ≥†ÎëêÍ≥† Î≥¥Í≥† Ïã∂Ïñ¥ Í∏∞Î°ùÌï¥ÎÜìÍ≥†Ïûê Ìï©ÎãàÎã§.   Í∞ïÏùò ÎßÅÌÅ¨ÎèÑ Í∞ÄÏû• ÏïÑÎûòÏóê Ï≤®Î∂ÄÌï¥ ÎÜìÍ≤†ÏäµÎãàÎã§.   Í∞ùÏ≤¥ÏßÄÌñ• ÏÉùÌôúÏ≤¥Ï°∞ ÏõêÏπô   Í∑úÏπô 1. Ìïú Î©îÏÑúÎìúÏóê Ïò§ÏßÅ Ìïú Îã®Í≥ÑÏùò Îì§Ïó¨Ïì∞Í∏∞Îßå ÌïúÎã§.   Í∑úÏπô 2. else ÏòàÏïΩÏñ¥Î•º Ïì∞ÏßÄ ÏïäÎäîÎã§.   Í∑úÏπô 3. Î™®Îì† ÏõêÏãúÍ∞íÍ≥º Î¨∏ÏûêÏó¥ÏùÑ Ìè¨Ïû•ÌïúÎã§.   Í∑úÏπô 4. Ìïú Ï§ÑÏóê Ï†êÏùÑ ÌïòÎÇòÎßå Ï∞çÎäîÎã§.   Í∑úÏπô 5. Ï§ÑÏó¨Ïì∞ÏßÄ ÏïäÎäîÎã§(Ï∂ïÏïΩ Í∏àÏßÄ).   Í∑úÏπô 6. Î™®Îì† ÏóîÌã∞Ìã∞Î•º ÏûëÍ≤å Ïú†ÏßÄÌïúÎã§.   Í∑úÏπô 7. 3Í∞ú Ïù¥ÏÉÅÏùò Ïù∏Ïä§ÌÑ¥Ïä§ Î≥ÄÏàòÎ•º Í∞ÄÏßÑ ÌÅ¥ÎûòÏä§Î•º Ïì∞ÏßÄ ÏïäÎäîÎã§.   Í∑úÏπô 8. ÏùºÍ∏â ÏΩúÎûôÏÖòÏùÑ Ïì¥Îã§.   Í∑úÏπô 9. Í≤åÌÑ∞/ÏÑ∏ÌÑ∞/ÌîÑÎ°úÌçºÌã∞Î•º Ïì∞ÏßÄ ÏïäÎäîÎã§.   ÌÅ¥Î¶∞ÏΩîÎìú   Î©îÏÜåÎìú(Ìï®Ïàò)ÏóêÏÑú Ïù¥ÏÉÅÏ†ÅÏù∏ Ïù∏ÏûêÍ∞úÏàòÎäî 0Í∞ú(Î¨¥Ìï≠)Ïù¥Îã§.   Îã§ÏùåÏùÄ 1Í∞úÏù¥Í≥†, Îã§ÏùåÏùÄ 2Í∞úÏù¥Îã§.   3Í∞úÎäî Í∞ÄÎä•Ìïú ÌîºÌïòÎäî Ìé∏Ïù¥ Ï¢ãÎã§.   4Í∞ú Ïù¥ÏÉÅÏùÄ ÌäπÎ≥ÑÌïú Ïù¥Ïú†Í∞Ä ÏûàÏñ¥ÎèÑ ÏÇ¨Ïö©ÌïòÎ©¥ ÏïàÎêúÎã§.     ","categories": ["Dev"],
        "tags": ["Convention","Java"],
        "url": "/dev/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EC%83%9D%ED%99%9C%EC%B2%B4%EC%A1%B0/",
        "teaser": "/assets/images/teaser.png"
      }]
